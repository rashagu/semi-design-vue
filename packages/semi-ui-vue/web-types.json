{
  "$schema": "https://raw.githubusercontent.com/JetBrains/web-types/master/schema/web-types.json",
  "framework": "vue",
  "name": "my-vue-library",
  "version": "1.0.0",
  "contributions": {
    "html": {
      "tags": [
        {
          "name": "Anchor",
          "attributes": [
            {
              "name": "autoCollapse",
              "description": "Description for autoCollapse",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "defaultAnchor",
              "description": "Description for defaultAnchor",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "getContainer",
              "description": "Description for getContainer",
              "value": {
                "type": "() => HTMLElement | Window"
              }
            },
            {
              "name": "maxHeight",
              "description": "Description for maxHeight",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Description for maxWidth",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "offsetTop",
              "description": "Description for offsetTop",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\""
              }
            },
            {
              "name": "railTheme",
              "description": "Description for railTheme",
              "value": {
                "type": "\"primary\" | \"tertiary\" | \"muted\""
              }
            },
            {
              "name": "scrollMotion",
              "description": "Description for scrollMotion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showTooltip",
              "description": "Description for showTooltip",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/typography/interface\").ShowTooltip"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "targetOffset",
              "description": "Description for targetOffset",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(currentLink: string, previousLink: string) => void"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent, currentLink: string) => void"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Link",
          "attributes": [
            {
              "name": "href",
              "description": "Description for href",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "level",
              "description": "Description for level",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "direction",
              "description": "Description for direction",
              "value": {
                "type": "\"ltr\" | \"rtl\""
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "AutoComplete",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "data",
              "description": "Description for data",
              "value": {
                "type": "T[]"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultOpen",
              "description": "Description for defaultOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "T"
              }
            },
            {
              "name": "defaultActiveFirstOption",
              "description": "Description for defaultActiveFirstOption",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownMatchSelectWidth",
              "description": "Description for dropdownMatchSelectWidth",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownClassName",
              "description": "Description for dropdownClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "dropdownStyle",
              "description": "Description for dropdownStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "() => any"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "maxHeight",
              "description": "Description for maxHeight",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: string | number) => void"
              }
            },
            {
              "name": "onSearch",
              "description": "Description for onSearch",
              "value": {
                "type": "(inputValue: string) => void"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(value: T) => void"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "onChangeWithObject",
              "description": "Description for onChangeWithObject",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onSelectWithObject",
              "description": "Description for onSelectWithObject",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onDropdownVisibleChange",
              "description": "Description for onDropdownVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "renderItem",
              "description": "Description for renderItem",
              "value": {
                "type": "(option: T) => any"
              }
            },
            {
              "name": "renderSelectedItem",
              "description": "Description for renderSelectedItem",
              "value": {
                "type": "(option: T) => string"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "triggerRender",
              "description": "Description for triggerRender",
              "value": {
                "type": "(props?: any) => any"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Avatar",
          "attributes": [
            {
              "name": "color",
              "description": "Description for color",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarColor"
              }
            },
            {
              "name": "shape",
              "description": "Description for shape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarShape"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarSize"
              }
            },
            {
              "name": "hoverMask",
              "description": "Description for hoverMask",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "src",
              "description": "Description for src",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "srcSet",
              "description": "Description for srcSet",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "alt",
              "description": "Description for alt",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "gap",
              "description": "Description for gap",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "imgAttr",
              "description": "Description for imgAttr",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").ImgHTMLAttributes"
              }
            },
            {
              "name": "bottomSlot",
              "description": "Description for bottomSlot",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties; }"
              }
            },
            {
              "name": "topSlot",
              "description": "Description for topSlot",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties; }"
              }
            },
            {
              "name": "border",
              "description": "Description for border",
              "value": {
                "type": "boolean | { color?: string; motion?: boolean; }"
              }
            },
            {
              "name": "contentMotion",
              "description": "Description for contentMotion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "AvatarGroup",
          "attributes": [
            {
              "name": "shape",
              "description": "Description for shape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarGroupShape"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarGroupSize"
              }
            },
            {
              "name": "overlapFrom",
              "description": "Description for overlapFrom",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/avatar/interface\").AvatarGroupOverlapFrom"
              }
            },
            {
              "name": "maxCount",
              "description": "Description for maxCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "renderMore",
              "description": "Description for renderMore",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "BackTop",
          "attributes": [
            {
              "name": "target",
              "description": "Description for target",
              "value": {
                "type": "() => any"
              }
            },
            {
              "name": "visibilityHeight",
              "description": "Description for visibilityHeight",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "duration",
              "description": "Description for duration",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Badge",
          "attributes": [
            {
              "name": "count",
              "description": "Description for count",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "dot",
              "description": "Description for dot",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/badge/index\").BadgeType"
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/badge/index\").BadgeTheme"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/badge/index\").BadgePosition"
              }
            },
            {
              "name": "overflowCount",
              "description": "Description for overflowCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "(e: MouseEvent) => any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "(e: MouseEvent) => any"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => any"
              }
            },
            {
              "name": "countClassName",
              "description": "Description for countClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "countStyle",
              "description": "Description for countStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Banner",
          "attributes": [
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/banner/index\").Type"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "fullMode",
              "description": "Description for fullMode",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "description",
              "description": "Description for description",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "closeIcon",
              "description": "Description for closeIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "bordered",
              "description": "Description for bordered",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onClose",
              "description": "Description for onClose",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Breadcrumb",
          "attributes": [
            {
              "name": "routes",
              "description": "Description for routes",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/item\").RouteProps[]"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/item\").RouteProps, event: MouseEvent) => void"
              }
            },
            {
              "name": "separator",
              "description": "Description for separator",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "compact",
              "description": "Description for compact",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "renderItem",
              "description": "Description for renderItem",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "showTooltip",
              "description": "Description for showTooltip",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/index\").showToolTipProps"
              }
            },
            {
              "name": "maxItemCount",
              "description": "Description for maxItemCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "autoCollapse",
              "description": "Description for autoCollapse",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "renderMore",
              "description": "Description for renderMore",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "moreType",
              "description": "Description for moreType",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/index\").MoreType"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "activeIndex",
              "description": "Description for activeIndex",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "BreadcrumbItem",
          "attributes": [
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/item\").RouteProps, e: MouseEvent) => void"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "href",
              "description": "Description for href",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "separator",
              "description": "Description for separator",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "noLink",
              "description": "Description for noLink",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "active",
              "description": "Description for active",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "shouldRenderSeparator",
              "description": "Description for shouldRenderSeparator",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "route",
              "description": "Description for route",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/breadcrumb/item\").RouteProps"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Button",
          "attributes": [
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "block",
              "description": "Description for block",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "circle",
              "description": "Description for circle",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "htmlType",
              "description": "Description for htmlType",
              "value": {
                "type": "\"button\" | \"reset\" | \"submit\""
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "iconPosition",
              "description": "Description for iconPosition",
              "value": {
                "type": "\"left\" | \"right\""
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Size"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Theme"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseDown",
              "description": "Description for onMouseDown",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "ButtonGroup",
          "attributes": [
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Size"
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/ButtonGroup\").Theme"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Button",
          "attributes": [
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "iconPosition",
              "description": "Description for iconPosition",
              "value": {
                "type": "\"left\" | \"right\""
              }
            },
            {
              "name": "iconSize",
              "description": "Description for iconSize",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "iconStyle",
              "description": "Description for iconStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Theme"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "noHorizontalPadding",
              "description": "Description for noHorizontalPadding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/iconButton/index\").HorizontalPaddingType[]"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "block",
              "description": "Description for block",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "circle",
              "description": "Description for circle",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "htmlType",
              "description": "Description for htmlType",
              "value": {
                "type": "\"button\" | \"reset\" | \"submit\""
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Size"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseDown",
              "description": "Description for onMouseDown",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "SplitButtonGroup",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "CardGroup",
          "attributes": [
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number | number[]"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "\"grid\""
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Card",
          "attributes": [
            {
              "name": "actions",
              "description": "Description for actions",
              "value": {
                "type": "any[]"
              }
            },
            {
              "name": "bodyStyle",
              "description": "Description for bodyStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "bordered",
              "description": "Description for bordered",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "cover",
              "description": "Description for cover",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "headerExtraContent",
              "description": "Description for headerExtraContent",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "footer",
              "description": "Description for footer",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "footerLine",
              "description": "Description for footerLine",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "footerStyle",
              "description": "Description for footerStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "headerLine",
              "description": "Description for headerLine",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "headerStyle",
              "description": "Description for headerStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "shadows",
              "description": "Description for shadows",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/card/index\").Shadows"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Carousel",
          "attributes": [
            {
              "name": "activeIndex",
              "description": "Description for activeIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "animation",
              "description": "Description for animation",
              "value": {
                "type": "\"slide\" | \"fade\""
              }
            },
            {
              "name": "arrowProps",
              "description": "Description for arrowProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/carousel/interface\").ArrowProps"
              }
            },
            {
              "name": "autoPlay",
              "description": "Description for autoPlay",
              "value": {
                "type": "boolean | { interval?: number; hoverToPause?: boolean; }"
              }
            },
            {
              "name": "arrowType",
              "description": "Description for arrowType",
              "value": {
                "type": "\"hover\" | \"always\""
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>[]"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "defaultActiveIndex",
              "description": "Description for defaultActiveIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "indicatorPosition",
              "description": "Description for indicatorPosition",
              "value": {
                "type": "\"left\" | \"right\" | \"center\""
              }
            },
            {
              "name": "indicatorSize",
              "description": "Description for indicatorSize",
              "value": {
                "type": "\"small\" | \"medium\""
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "\"primary\" | \"light\" | \"dark\""
              }
            },
            {
              "name": "indicatorType",
              "description": "Description for indicatorType",
              "value": {
                "type": "\"columnar\" | \"line\" | \"dot\""
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(index: number, preIndex: number) => void"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showIndicator",
              "description": "Description for showIndicator",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "slideDirection",
              "description": "Description for slideDirection",
              "value": {
                "type": "\"left\" | \"right\""
              }
            },
            {
              "name": "speed",
              "description": "Description for speed",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "trigger",
              "description": "Description for trigger",
              "value": {
                "type": "\"hover\" | \"click\""
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Cascader",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "arrowIcon",
              "description": "Description for arrowIcon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/index\").Value"
              }
            },
            {
              "name": "dropdownStyle",
              "description": "Description for dropdownStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "filterTreeNode",
              "description": "Description for filterTreeNode",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").CascaderData) => boolean)"
              }
            },
            {
              "name": "filterSorter",
              "description": "Description for filterSorter",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").CascaderData, inputValue: string) => number"
              }
            },
            {
              "name": "filterRender",
              "description": "Description for filterRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").FilterRenderProps) => any"
              }
            },
            {
              "name": "treeData",
              "description": "Description for treeData",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").CascaderData[]"
              }
            },
            {
              "name": "restTagsPopoverProps",
              "description": "Description for restTagsPopoverProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/popover/index\").PopoverProps"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/index\").Value"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "bottomSlot",
              "description": "Description for bottomSlot",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "topSlot",
              "description": "Description for topSlot",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "triggerRender",
              "description": "Description for triggerRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/index\").TriggerRenderProps) => any"
              }
            },
            {
              "name": "onListScroll",
              "description": "Description for onListScroll",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/index\").ScrollPanelProps) => void"
              }
            },
            {
              "name": "loadData",
              "description": "Description for loadData",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").CascaderData[]) => Promise<void>"
              }
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").CascaderData) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/index\").Value) => void"
              }
            },
            {
              "name": "onExceed",
              "description": "Description for onExceed",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/cascader/item\").Entity[]) => void"
              }
            },
            {
              "name": "displayRender",
              "description": "Description for displayRender",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "searchPosition",
              "description": "Description for searchPosition",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "loadedKeys",
              "description": "Description for loadedKeys",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "autoClearSearchValue",
              "description": "Description for autoClearSearchValue",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "separator",
              "description": "Description for separator",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "changeOnSelect",
              "description": "Description for changeOnSelect",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoMergeValue",
              "description": "Description for autoMergeValue",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownClassName",
              "description": "Description for dropdownClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "filterLeafOnly",
              "description": "Description for filterLeafOnly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "searchPlaceholder",
              "description": "Description for searchPlaceholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/cascader/foundation\").CascaderType"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "treeNodeFilterProp",
              "description": "Description for treeNodeFilterProp",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "displayProp",
              "description": "Description for displayProp",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "maxTagCount",
              "description": "Description for maxTagCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "showRestTagsPopover",
              "description": "Description for showRestTagsPopover",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultOpen",
              "description": "Description for defaultOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChangeWithObject",
              "description": "Description for onChangeWithObject",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showNext",
              "description": "Description for showNext",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/cascader/foundation\").ShowNextType"
              }
            },
            {
              "name": "disableStrictly",
              "description": "Description for disableStrictly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "leafOnly",
              "description": "Description for leafOnly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "enableLeafClick",
              "description": "Description for enableLeafClick",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "virtualizeInSearch",
              "description": "Description for virtualizeInSearch",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/cascader/foundation\").Virtualize"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "onDropdownVisibleChange",
              "description": "Description for onDropdownVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "onSearch",
              "description": "Description for onSearch",
              "value": {
                "type": "(value: string) => void"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(value: string | number | (string | number)[]) => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Checkbox",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/checkbox/checkboxFoundation\").BasicCheckboxEvent) => any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "extra",
              "description": "Description for extra",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "tabIndex",
              "description": "Description for tabIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "addonId",
              "description": "Description for addonId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "extraId",
              "description": "Description for extraId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/checkbox/checkboxGroup\").CheckboxType"
              }
            },
            {
              "name": "index",
              "description": "Description for index",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "checked",
              "description": "Description for checked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultChecked",
              "description": "Description for defaultChecked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "indeterminate",
              "description": "Description for indeterminate",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "CollapsePanel",
          "attributes": [
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "extra",
              "description": "Description for extra",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>[]"
              }
            },
            {
              "name": "reCalcKey",
              "description": "Description for reCalcKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onMotionEnd",
              "description": "Description for onMotionEnd",
              "value": {
                "type": "() => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Collapsible",
          "attributes": [
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "isOpen",
              "description": "Description for isOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "duration",
              "description": "Description for duration",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "lazyRender",
              "description": "Description for lazyRender",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "collapseHeight",
              "description": "Description for collapseHeight",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "reCalcKey",
              "description": "Description for reCalcKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onMotionEnd",
              "description": "Description for onMotionEnd",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "fade",
              "description": "Description for fade",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "ConfigProvider",
          "attributes": [
            {
              "name": "direction",
              "description": "Description for direction",
              "value": {
                "type": "\"ltr\" | \"rtl\""
              }
            },
            {
              "name": "timeZone",
              "description": "Description for timeZone",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "locale",
              "description": "Description for locale",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/locale/interface\").Locale"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "DatePicker",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "clearIcon",
              "description": "Description for clearIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "timePickerOpts",
              "description": "Description for timePickerOpts",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/timePicker/TimePicker\").TimePickerProps"
              }
            },
            {
              "name": "bottomSlot",
              "description": "Description for bottomSlot",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "topSlot",
              "description": "Description for topSlot",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "renderDate",
              "description": "Description for renderDate",
              "value": {
                "type": "(dayNumber?: number, fullDate?: string) => any"
              }
            },
            {
              "name": "renderFullDate",
              "description": "Description for renderFullDate",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DayStatusType) => any"
              }
            },
            {
              "name": "triggerRender",
              "description": "Description for triggerRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/datePicker/datePicker\").DatePickerProps) => any"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").RangeType) => void"
              }
            },
            {
              "name": "onPresetClick",
              "description": "Description for onPresetClick",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").PresetType, e: MouseEvent) => void"
              }
            },
            {
              "name": "onClickOutSide",
              "description": "Description for onClickOutSide",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "locale",
              "description": "Description for locale",
              "value": {
                "type": "{ placeholder: { date: string; dateTime: string; dateRange: [string, string]; dateTimeRange: [string, string]; monthRange: [string, string]; }; presets: string; footer: { confirm: string; cancel: string; }; selectDate: string; selectTime: string; year: string; month: string; day: string; monthText: string; months: { 1: string; 2: string; 3: string; 4: string; 5: string; 6: string; 7: string; 8: string; 9: string; 10: string; 11: string; 12: string; }; fullMonths: { 1: string; 2: string; 3: string; 4: string; 5: string; 6: string; 7: string; 8: string; 9: string; 10: string; 11: string; 12: string; }; weeks: { Mon: string; Tue: string; Wed: string; Thu: string; Fri: string; Sat: string; Sun: string; }; localeFormatToken: { FORMAT_SWITCH_DATE: string; }; }"
              }
            },
            {
              "name": "dateFnsLocale",
              "description": "Description for dateFnsLocale",
              "value": {
                "type": "Locale"
              }
            },
            {
              "name": "yearAndMonthOpts",
              "description": "Description for yearAndMonthOpts",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/scrollList/scrollItem\").ScrollItemProps<any>"
              }
            },
            {
              "name": "dropdownMargin",
              "description": "Description for dropdownMargin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoSwitchDate",
              "description": "Description for autoSwitchDate",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "defaultOpen",
              "description": "Description for defaultOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultPickerValue",
              "description": "Description for defaultPickerValue",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").ValueType"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").ValueType"
              }
            },
            {
              "name": "density",
              "description": "Description for density",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DensityType"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabledDate",
              "description": "Description for disabledDate",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DisabledDateType"
              }
            },
            {
              "name": "disabledTime",
              "description": "Description for disabledTime",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DisabledTimeType"
              }
            },
            {
              "name": "dropdownClassName",
              "description": "Description for dropdownClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "dropdownStyle",
              "description": "Description for dropdownStyle",
              "value": {
                "type": "Record<string, any>"
              }
            },
            {
              "name": "endDateOffset",
              "description": "Description for endDateOffset",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DateOffsetType"
              }
            },
            {
              "name": "format",
              "description": "Description for format",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "inputReadOnly",
              "description": "Description for inputReadOnly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "inputStyle",
              "description": "Description for inputStyle",
              "value": {
                "type": "Record<string, any>"
              }
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "needConfirm",
              "description": "Description for needConfirm",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChangeWithDateFirst",
              "description": "Description for onChangeWithDateFirst",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "open",
              "description": "Description for open",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string | string[]"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\""
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "presets",
              "description": "Description for presets",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").PresetsType"
              }
            },
            {
              "name": "presetPosition",
              "description": "Description for presetPosition",
              "value": {
                "type": "\"top\" | \"left\" | \"right\" | \"bottom\""
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "startDateOffset",
              "description": "Description for startDateOffset",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").DateOffsetType"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "Record<string, any>"
              }
            },
            {
              "name": "timeZone",
              "description": "Description for timeZone",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation\").Type"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").ValueType"
              }
            },
            {
              "name": "weekStartsOn",
              "description": "Description for weekStartsOn",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/_utils/getMonthTable\").WeekStartNumber"
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "syncSwitchMonth",
              "description": "Description for syncSwitchMonth",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "hideDisabledOptions",
              "description": "Description for hideDisabledOptions",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabledTimePicker",
              "description": "Description for disabledTimePicker",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "localeCode",
              "description": "Description for localeCode",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "rangeSeparator",
              "description": "Description for rangeSeparator",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "insetInput",
              "description": "Description for insetInput",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/inputFoundation\").InsetInputProps"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onCancel",
              "description": "Description for onCancel",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").OnCancelType"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").OnChangeType"
              }
            },
            {
              "name": "onOpenChange",
              "description": "Description for onOpenChange",
              "value": {
                "type": "(status: boolean) => void"
              }
            },
            {
              "name": "onPanelChange",
              "description": "Description for onPanelChange",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").OnPanelChangeType"
              }
            },
            {
              "name": "onConfirm",
              "description": "Description for onConfirm",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/datePicker/foundation\").OnConfirmType"
              }
            },
            {
              "name": "startYear",
              "description": "Description for startYear",
              "value": {}
            },
            {
              "name": "endYear",
              "description": "Description for endYear",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Descriptions",
          "attributes": [
            {
              "name": "align",
              "description": "Description for align",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/descriptions/descriptions-context\").DescriptionsAlign"
              }
            },
            {
              "name": "row",
              "description": "Description for row",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/descriptions/index\").DescriptionsSize"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>[]"
              }
            },
            {
              "name": "data",
              "description": "Description for data",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/descriptions/index\").Data[]"
              }
            },
            {
              "name": "layout",
              "description": "Description for layout",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/descriptions/descriptions-context\").DescriptionLayout"
              }
            },
            {
              "name": "column",
              "description": "Description for column",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "DescriptionsItem",
          "attributes": [
            {
              "name": "hidden",
              "description": "Description for hidden",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>[]"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "span",
              "description": "Description for span",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Divider",
          "attributes": [
            {
              "name": "align",
              "description": "Description for align",
              "value": {
                "type": "\"left\" | \"right\" | \"center\""
              }
            },
            {
              "name": "margin",
              "description": "Description for margin",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "dashed",
              "description": "Description for dashed",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "layout",
              "description": "Description for layout",
              "value": {
                "type": "\"horizontal\" | \"vertical\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "DropdownDivider",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "DropdownItem",
          "attributes": [
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "selected",
              "description": "Description for selected",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(payload: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseenter",
              "description": "Description for onMouseenter",
              "value": {
                "type": "(payload: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseleave",
              "description": "Description for onMouseleave",
              "value": {
                "type": "(payload: MouseEvent) => void"
              }
            },
            {
              "name": "onContextmenu",
              "description": "Description for onContextmenu",
              "value": {
                "type": "(payload: MouseEvent) => void"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/dropdown/dropdownItem\").Type"
              }
            },
            {
              "name": "active",
              "description": "Description for active",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "JSX.Element"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "showTick",
              "description": "Description for showTick",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "hover",
              "description": "Description for hover",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Dropdown",
          "attributes": [
            {
              "name": "onFilter",
              "description": "Description for onFilter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onFilterDropdownVisibleChange",
              "description": "Description for onFilterDropdownVisibleChange",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onHeaderCell",
              "description": "Description for onHeaderCell",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onGroupedRow",
              "description": "Description for onGroupedRow",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "render",
              "description": "Description for render",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "visible",
              "description": "Description for visible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "menu",
              "description": "Description for menu",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/dropdown/index\").DropDownMenuItem[]"
              }
            },
            {
              "name": "trigger",
              "description": "Description for trigger",
              "value": {
                "type": "\"hover\" | \"click\" | \"focus\" | \"custom\" | \"contextMenu\""
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string | any[]"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onVisibleChange",
              "description": "Description for onVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "rePosKey",
              "description": "Description for rePosKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "showTick",
              "description": "Description for showTick",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "closeOnEsc",
              "description": "Description for closeOnEsc",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onEscKeyDown",
              "description": "Description for onEscKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "clickToHide",
              "description": "Description for clickToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "content",
              "description": "Description for content",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onClickOutSide",
              "description": "Description for onClickOutSide",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "margin",
              "description": "Description for margin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "arrowBounding",
              "description": "Description for arrowBounding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tooltip/index\").ArrowBounding"
              }
            },
            {
              "name": "transformFromCenter",
              "description": "Description for transformFromCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "arrowPointAtCenter",
              "description": "Description for arrowPointAtCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapWhenSpecial",
              "description": "Description for wrapWhenSpecial",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "clickTriggerToHide",
              "description": "Description for clickTriggerToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapperClassName",
              "description": "Description for wrapperClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "guardFocus",
              "description": "Description for guardFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "returnFocusOnClose",
              "description": "Description for returnFocusOnClose",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableArrowKeyDown",
              "description": "Description for disableArrowKeyDown",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapperId",
              "description": "Description for wrapperId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableFocusListener",
              "description": "Description for disableFocusListener",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "afterClose",
              "description": "Description for afterClose",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Empty",
          "attributes": [
            {
              "name": "layout",
              "description": "Description for layout",
              "value": {
                "type": "\"horizontal\" | \"vertical\""
              }
            },
            {
              "name": "imageStyle",
              "description": "Description for imageStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "description",
              "description": "Description for description",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "image",
              "description": "Description for image",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }> | SVGNode"
              }
            },
            {
              "name": "darkModeImage",
              "description": "Description for darkModeImage",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }> | SVGNode"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "InputGroup",
          "attributes": [
            {
              "name": "label",
              "description": "Description for label",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/form/label\").LabelProps"
              }
            },
            {
              "name": "labelPosition",
              "description": "Description for labelPosition",
              "value": {
                "type": "\"top\" | \"left\""
              }
            },
            {
              "name": "extraText",
              "description": "Description for extraText",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "extraTextPosition",
              "description": "Description for extraTextPosition",
              "value": {
                "type": "\"bottom\" | \"middle\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/inputGroup\").InputSize"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "Record<string, any>"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Col",
          "attributes": [
            {
              "name": "span",
              "description": "Description for span",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "order",
              "description": "Description for order",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "offset",
              "description": "Description for offset",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "push",
              "description": "Description for push",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "pull",
              "description": "Description for pull",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "xs",
              "description": "Description for xs",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            },
            {
              "name": "sm",
              "description": "Description for sm",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            },
            {
              "name": "md",
              "description": "Description for md",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            },
            {
              "name": "lg",
              "description": "Description for lg",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            },
            {
              "name": "xl",
              "description": "Description for xl",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            },
            {
              "name": "xxl",
              "description": "Description for xxl",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/col\").ColSize"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Row",
          "attributes": [
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "\"flex\""
              }
            },
            {
              "name": "align",
              "description": "Description for align",
              "value": {
                "type": "\"top\" | \"bottom\" | \"middle\""
              }
            },
            {
              "name": "justify",
              "description": "Description for justify",
              "value": {
                "type": "\"start\" | \"end\" | \"center\" | \"space-around\" | \"space-between\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "gutter",
              "description": "Description for gutter",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/grid/row\").Gutter]"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Highlight",
          "attributes": [
            {
              "name": "autoEscape",
              "description": "Description for autoEscape",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "caseSensitive",
              "description": "Description for caseSensitive",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "sourceString",
              "description": "Description for sourceString",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "searchWords",
              "description": "Description for searchWords",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "highlightStyle",
              "description": "Description for highlightStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "highlightClassName",
              "description": "Description for highlightClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "component",
              "description": "Description for component",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "IconButton",
          "attributes": [
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "iconPosition",
              "description": "Description for iconPosition",
              "value": {
                "type": "\"left\" | \"right\""
              }
            },
            {
              "name": "iconSize",
              "description": "Description for iconSize",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "iconStyle",
              "description": "Description for iconStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "theme",
              "description": "Description for theme",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Theme"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "noHorizontalPadding",
              "description": "Description for noHorizontalPadding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/iconButton/index\").HorizontalPaddingType[]"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "block",
              "description": "Description for block",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "circle",
              "description": "Description for circle",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "htmlType",
              "description": "Description for htmlType",
              "value": {
                "type": "\"button\" | \"reset\" | \"submit\""
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Size"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseDown",
              "description": "Description for onMouseDown",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Image",
          "attributes": [
            {
              "name": "src",
              "description": "Description for src",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "width",
              "description": "Description for width",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Description for height",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "alt",
              "description": "Description for alt",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "fallback",
              "description": "Description for fallback",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "preview",
              "description": "Description for preview",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/image/interface\").PreviewProps"
              }
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {
                "type": "(event: Event) => void"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(event: any) => void"
              }
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {
                "type": "(event: Event) => void"
              }
            },
            {
              "name": "crossOrigin",
              "description": "Description for crossOrigin",
              "value": {
                "type": "\"anonymous\" | \"use-credentials\""
              }
            },
            {
              "name": "maxZoom",
              "description": "Description for maxZoom",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "minZoom",
              "description": "Description for minZoom",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "imageID",
              "description": "Description for imageID",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "setDownloadName",
              "description": "Description for setDownloadName",
              "value": {
                "type": "(src: string) => string"
              }
            },
            {
              "name": "imgStyle",
              "description": "Description for imgStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "imgCls",
              "description": "Description for imgCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Slider",
          "attributes": [
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "min",
              "description": "Description for min",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "step",
              "description": "Description for step",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Input",
          "attributes": [
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "addonBefore",
              "description": "Description for addonBefore",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "addonAfter",
              "description": "Description for addonAfter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "\"password\""
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "readonly",
              "description": "Description for readonly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "hideSuffix",
              "description": "Description for hideSuffix",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/index\").InputSize"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "clearIcon",
              "description": "Description for clearIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/index\").ValidateStatus"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: string, e: HashChangeEvent) => void"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onInput",
              "description": "Description for onInput",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onKeyUp",
              "description": "Description for onKeyUp",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onKeyPress",
              "description": "Description for onKeyPress",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onEnterPress",
              "description": "Description for onEnterPress",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "inputStyle",
              "description": "Description for inputStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "getValueLength",
              "description": "Description for getValueLength",
              "value": {
                "type": "(value: string) => number"
              }
            },
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "minlength",
              "description": "Description for minlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxlength",
              "description": "Description for maxlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showClearIgnoreDisabled",
              "description": "Description for showClearIgnoreDisabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onlyBorder",
              "description": "Description for onlyBorder",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onCopy",
              "description": "Description for onCopy",
              "value": {}
            },
            {
              "name": "onCut",
              "description": "Description for onCut",
              "value": {}
            },
            {
              "name": "onPaste",
              "description": "Description for onPaste",
              "value": {}
            },
            {
              "name": "onCompositionend",
              "description": "Description for onCompositionend",
              "value": {}
            },
            {
              "name": "onCompositionstart",
              "description": "Description for onCompositionstart",
              "value": {}
            },
            {
              "name": "onCompositionupdate",
              "description": "Description for onCompositionupdate",
              "value": {}
            },
            {
              "name": "onDrag",
              "description": "Description for onDrag",
              "value": {}
            },
            {
              "name": "onDragend",
              "description": "Description for onDragend",
              "value": {}
            },
            {
              "name": "onDragenter",
              "description": "Description for onDragenter",
              "value": {}
            },
            {
              "name": "onDragexit",
              "description": "Description for onDragexit",
              "value": {}
            },
            {
              "name": "onDragleave",
              "description": "Description for onDragleave",
              "value": {}
            },
            {
              "name": "onDragover",
              "description": "Description for onDragover",
              "value": {}
            },
            {
              "name": "onDragstart",
              "description": "Description for onDragstart",
              "value": {}
            },
            {
              "name": "onDrop",
              "description": "Description for onDrop",
              "value": {}
            },
            {
              "name": "onFocusin",
              "description": "Description for onFocusin",
              "value": {}
            },
            {
              "name": "onFocusout",
              "description": "Description for onFocusout",
              "value": {}
            },
            {
              "name": "onBeforeinput",
              "description": "Description for onBeforeinput",
              "value": {}
            },
            {
              "name": "onReset",
              "description": "Description for onReset",
              "value": {}
            },
            {
              "name": "onSubmit",
              "description": "Description for onSubmit",
              "value": {}
            },
            {
              "name": "onInvalid",
              "description": "Description for onInvalid",
              "value": {}
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {}
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {}
            },
            {
              "name": "onKeydown",
              "description": "Description for onKeydown",
              "value": {}
            },
            {
              "name": "onKeypress",
              "description": "Description for onKeypress",
              "value": {}
            },
            {
              "name": "onKeyup",
              "description": "Description for onKeyup",
              "value": {}
            },
            {
              "name": "onAuxclick",
              "description": "Description for onAuxclick",
              "value": {}
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {}
            },
            {
              "name": "onContextmenu",
              "description": "Description for onContextmenu",
              "value": {}
            },
            {
              "name": "onDblclick",
              "description": "Description for onDblclick",
              "value": {}
            },
            {
              "name": "onMousedown",
              "description": "Description for onMousedown",
              "value": {}
            },
            {
              "name": "onMouseenter",
              "description": "Description for onMouseenter",
              "value": {}
            },
            {
              "name": "onMouseleave",
              "description": "Description for onMouseleave",
              "value": {}
            },
            {
              "name": "onMousemove",
              "description": "Description for onMousemove",
              "value": {}
            },
            {
              "name": "onMouseout",
              "description": "Description for onMouseout",
              "value": {}
            },
            {
              "name": "onMouseover",
              "description": "Description for onMouseover",
              "value": {}
            },
            {
              "name": "onMouseup",
              "description": "Description for onMouseup",
              "value": {}
            },
            {
              "name": "onAbort",
              "description": "Description for onAbort",
              "value": {}
            },
            {
              "name": "onCanplay",
              "description": "Description for onCanplay",
              "value": {}
            },
            {
              "name": "onCanplaythrough",
              "description": "Description for onCanplaythrough",
              "value": {}
            },
            {
              "name": "onDurationchange",
              "description": "Description for onDurationchange",
              "value": {}
            },
            {
              "name": "onEmptied",
              "description": "Description for onEmptied",
              "value": {}
            },
            {
              "name": "onEncrypted",
              "description": "Description for onEncrypted",
              "value": {}
            },
            {
              "name": "onEnded",
              "description": "Description for onEnded",
              "value": {}
            },
            {
              "name": "onLoadeddata",
              "description": "Description for onLoadeddata",
              "value": {}
            },
            {
              "name": "onLoadedmetadata",
              "description": "Description for onLoadedmetadata",
              "value": {}
            },
            {
              "name": "onLoadstart",
              "description": "Description for onLoadstart",
              "value": {}
            },
            {
              "name": "onPause",
              "description": "Description for onPause",
              "value": {}
            },
            {
              "name": "onPlay",
              "description": "Description for onPlay",
              "value": {}
            },
            {
              "name": "onPlaying",
              "description": "Description for onPlaying",
              "value": {}
            },
            {
              "name": "onProgress",
              "description": "Description for onProgress",
              "value": {}
            },
            {
              "name": "onRatechange",
              "description": "Description for onRatechange",
              "value": {}
            },
            {
              "name": "onSeeked",
              "description": "Description for onSeeked",
              "value": {}
            },
            {
              "name": "onSeeking",
              "description": "Description for onSeeking",
              "value": {}
            },
            {
              "name": "onStalled",
              "description": "Description for onStalled",
              "value": {}
            },
            {
              "name": "onSuspend",
              "description": "Description for onSuspend",
              "value": {}
            },
            {
              "name": "onTimeupdate",
              "description": "Description for onTimeupdate",
              "value": {}
            },
            {
              "name": "onVolumechange",
              "description": "Description for onVolumechange",
              "value": {}
            },
            {
              "name": "onWaiting",
              "description": "Description for onWaiting",
              "value": {}
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {}
            },
            {
              "name": "onScroll",
              "description": "Description for onScroll",
              "value": {}
            },
            {
              "name": "onScrollend",
              "description": "Description for onScrollend",
              "value": {}
            },
            {
              "name": "onTouchcancel",
              "description": "Description for onTouchcancel",
              "value": {}
            },
            {
              "name": "onTouchend",
              "description": "Description for onTouchend",
              "value": {}
            },
            {
              "name": "onTouchmove",
              "description": "Description for onTouchmove",
              "value": {}
            },
            {
              "name": "onTouchstart",
              "description": "Description for onTouchstart",
              "value": {}
            },
            {
              "name": "onPointerdown",
              "description": "Description for onPointerdown",
              "value": {}
            },
            {
              "name": "onPointermove",
              "description": "Description for onPointermove",
              "value": {}
            },
            {
              "name": "onPointerup",
              "description": "Description for onPointerup",
              "value": {}
            },
            {
              "name": "onPointercancel",
              "description": "Description for onPointercancel",
              "value": {}
            },
            {
              "name": "onPointerenter",
              "description": "Description for onPointerenter",
              "value": {}
            },
            {
              "name": "onPointerleave",
              "description": "Description for onPointerleave",
              "value": {}
            },
            {
              "name": "onPointerover",
              "description": "Description for onPointerover",
              "value": {}
            },
            {
              "name": "onPointerout",
              "description": "Description for onPointerout",
              "value": {}
            },
            {
              "name": "onWheel",
              "description": "Description for onWheel",
              "value": {}
            },
            {
              "name": "onAnimationstart",
              "description": "Description for onAnimationstart",
              "value": {}
            },
            {
              "name": "onAnimationend",
              "description": "Description for onAnimationend",
              "value": {}
            },
            {
              "name": "onAnimationiteration",
              "description": "Description for onAnimationiteration",
              "value": {}
            },
            {
              "name": "onTransitionend",
              "description": "Description for onTransitionend",
              "value": {}
            },
            {
              "name": "onTransitionstart",
              "description": "Description for onTransitionstart",
              "value": {}
            },
            {
              "name": "accept",
              "description": "Description for accept",
              "value": {}
            },
            {
              "name": "alt",
              "description": "Description for alt",
              "value": {}
            },
            {
              "name": "autocomplete",
              "description": "Description for autocomplete",
              "value": {}
            },
            {
              "name": "autofocus",
              "description": "Description for autofocus",
              "value": {}
            },
            {
              "name": "capture",
              "description": "Description for capture",
              "value": {}
            },
            {
              "name": "checked",
              "description": "Description for checked",
              "value": {}
            },
            {
              "name": "crossorigin",
              "description": "Description for crossorigin",
              "value": {}
            },
            {
              "name": "enterKeyHint",
              "description": "Description for enterKeyHint",
              "value": {}
            },
            {
              "name": "form",
              "description": "Description for form",
              "value": {}
            },
            {
              "name": "formaction",
              "description": "Description for formaction",
              "value": {}
            },
            {
              "name": "formenctype",
              "description": "Description for formenctype",
              "value": {}
            },
            {
              "name": "formmethod",
              "description": "Description for formmethod",
              "value": {}
            },
            {
              "name": "formnovalidate",
              "description": "Description for formnovalidate",
              "value": {}
            },
            {
              "name": "formtarget",
              "description": "Description for formtarget",
              "value": {}
            },
            {
              "name": "height",
              "description": "Description for height",
              "value": {}
            },
            {
              "name": "indeterminate",
              "description": "Description for indeterminate",
              "value": {}
            },
            {
              "name": "list",
              "description": "Description for list",
              "value": {}
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {}
            },
            {
              "name": "min",
              "description": "Description for min",
              "value": {}
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {}
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {}
            },
            {
              "name": "pattern",
              "description": "Description for pattern",
              "value": {}
            },
            {
              "name": "required",
              "description": "Description for required",
              "value": {}
            },
            {
              "name": "src",
              "description": "Description for src",
              "value": {}
            },
            {
              "name": "step",
              "description": "Description for step",
              "value": {}
            },
            {
              "name": "width",
              "description": "Description for width",
              "value": {}
            },
            {
              "name": "innerHTML",
              "description": "Description for innerHTML",
              "value": {}
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {}
            },
            {
              "name": "accesskey",
              "description": "Description for accesskey",
              "value": {}
            },
            {
              "name": "contenteditable",
              "description": "Description for contenteditable",
              "value": {}
            },
            {
              "name": "contextmenu",
              "description": "Description for contextmenu",
              "value": {}
            },
            {
              "name": "dir",
              "description": "Description for dir",
              "value": {}
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {}
            },
            {
              "name": "hidden",
              "description": "Description for hidden",
              "value": {}
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {}
            },
            {
              "name": "inert",
              "description": "Description for inert",
              "value": {}
            },
            {
              "name": "lang",
              "description": "Description for lang",
              "value": {}
            },
            {
              "name": "spellcheck",
              "description": "Description for spellcheck",
              "value": {}
            },
            {
              "name": "tabindex",
              "description": "Description for tabindex",
              "value": {}
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {}
            },
            {
              "name": "translate",
              "description": "Description for translate",
              "value": {}
            },
            {
              "name": "radiogroup",
              "description": "Description for radiogroup",
              "value": {}
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {}
            },
            {
              "name": "about",
              "description": "Description for about",
              "value": {}
            },
            {
              "name": "datatype",
              "description": "Description for datatype",
              "value": {}
            },
            {
              "name": "inlist",
              "description": "Description for inlist",
              "value": {}
            },
            {
              "name": "property",
              "description": "Description for property",
              "value": {}
            },
            {
              "name": "resource",
              "description": "Description for resource",
              "value": {}
            },
            {
              "name": "typeof",
              "description": "Description for typeof",
              "value": {}
            },
            {
              "name": "vocab",
              "description": "Description for vocab",
              "value": {}
            },
            {
              "name": "autocapitalize",
              "description": "Description for autocapitalize",
              "value": {}
            },
            {
              "name": "autocorrect",
              "description": "Description for autocorrect",
              "value": {}
            },
            {
              "name": "autosave",
              "description": "Description for autosave",
              "value": {}
            },
            {
              "name": "color",
              "description": "Description for color",
              "value": {}
            },
            {
              "name": "itemprop",
              "description": "Description for itemprop",
              "value": {}
            },
            {
              "name": "itemscope",
              "description": "Description for itemscope",
              "value": {}
            },
            {
              "name": "itemtype",
              "description": "Description for itemtype",
              "value": {}
            },
            {
              "name": "itemid",
              "description": "Description for itemid",
              "value": {}
            },
            {
              "name": "itemref",
              "description": "Description for itemref",
              "value": {}
            },
            {
              "name": "results",
              "description": "Description for results",
              "value": {}
            },
            {
              "name": "security",
              "description": "Description for security",
              "value": {}
            },
            {
              "name": "unselectable",
              "description": "Description for unselectable",
              "value": {}
            },
            {
              "name": "inputmode",
              "description": "Description for inputmode",
              "value": {}
            },
            {
              "name": "is",
              "description": "Description for is",
              "value": {}
            },
            {
              "name": "aria-activedescendant",
              "description": "Description for aria-activedescendant",
              "value": {}
            },
            {
              "name": "aria-atomic",
              "description": "Description for aria-atomic",
              "value": {}
            },
            {
              "name": "aria-autocomplete",
              "description": "Description for aria-autocomplete",
              "value": {}
            },
            {
              "name": "aria-busy",
              "description": "Description for aria-busy",
              "value": {}
            },
            {
              "name": "aria-checked",
              "description": "Description for aria-checked",
              "value": {}
            },
            {
              "name": "aria-colcount",
              "description": "Description for aria-colcount",
              "value": {}
            },
            {
              "name": "aria-colindex",
              "description": "Description for aria-colindex",
              "value": {}
            },
            {
              "name": "aria-colspan",
              "description": "Description for aria-colspan",
              "value": {}
            },
            {
              "name": "aria-controls",
              "description": "Description for aria-controls",
              "value": {}
            },
            {
              "name": "aria-current",
              "description": "Description for aria-current",
              "value": {}
            },
            {
              "name": "aria-details",
              "description": "Description for aria-details",
              "value": {}
            },
            {
              "name": "aria-disabled",
              "description": "Description for aria-disabled",
              "value": {}
            },
            {
              "name": "aria-dropeffect",
              "description": "Description for aria-dropeffect",
              "value": {}
            },
            {
              "name": "aria-expanded",
              "description": "Description for aria-expanded",
              "value": {}
            },
            {
              "name": "aria-flowto",
              "description": "Description for aria-flowto",
              "value": {}
            },
            {
              "name": "aria-grabbed",
              "description": "Description for aria-grabbed",
              "value": {}
            },
            {
              "name": "aria-haspopup",
              "description": "Description for aria-haspopup",
              "value": {}
            },
            {
              "name": "aria-hidden",
              "description": "Description for aria-hidden",
              "value": {}
            },
            {
              "name": "aria-keyshortcuts",
              "description": "Description for aria-keyshortcuts",
              "value": {}
            },
            {
              "name": "aria-level",
              "description": "Description for aria-level",
              "value": {}
            },
            {
              "name": "aria-live",
              "description": "Description for aria-live",
              "value": {}
            },
            {
              "name": "aria-modal",
              "description": "Description for aria-modal",
              "value": {}
            },
            {
              "name": "aria-multiline",
              "description": "Description for aria-multiline",
              "value": {}
            },
            {
              "name": "aria-multiselectable",
              "description": "Description for aria-multiselectable",
              "value": {}
            },
            {
              "name": "aria-orientation",
              "description": "Description for aria-orientation",
              "value": {}
            },
            {
              "name": "aria-owns",
              "description": "Description for aria-owns",
              "value": {}
            },
            {
              "name": "aria-placeholder",
              "description": "Description for aria-placeholder",
              "value": {}
            },
            {
              "name": "aria-posinset",
              "description": "Description for aria-posinset",
              "value": {}
            },
            {
              "name": "aria-pressed",
              "description": "Description for aria-pressed",
              "value": {}
            },
            {
              "name": "aria-readonly",
              "description": "Description for aria-readonly",
              "value": {}
            },
            {
              "name": "aria-relevant",
              "description": "Description for aria-relevant",
              "value": {}
            },
            {
              "name": "aria-roledescription",
              "description": "Description for aria-roledescription",
              "value": {}
            },
            {
              "name": "aria-rowcount",
              "description": "Description for aria-rowcount",
              "value": {}
            },
            {
              "name": "aria-rowindex",
              "description": "Description for aria-rowindex",
              "value": {}
            },
            {
              "name": "aria-rowspan",
              "description": "Description for aria-rowspan",
              "value": {}
            },
            {
              "name": "aria-selected",
              "description": "Description for aria-selected",
              "value": {}
            },
            {
              "name": "aria-setsize",
              "description": "Description for aria-setsize",
              "value": {}
            },
            {
              "name": "aria-sort",
              "description": "Description for aria-sort",
              "value": {}
            },
            {
              "name": "aria-valuemax",
              "description": "Description for aria-valuemax",
              "value": {}
            },
            {
              "name": "aria-valuemin",
              "description": "Description for aria-valuemin",
              "value": {}
            },
            {
              "name": "aria-valuenow",
              "description": "Description for aria-valuenow",
              "value": {}
            },
            {
              "name": "aria-valuetext",
              "description": "Description for aria-valuetext",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "InputGroup",
          "attributes": [
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/inputGroup\").InputSize"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "Record<string, any>"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "label",
              "description": "Description for label",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/form/label\").LabelProps"
              }
            },
            {
              "name": "labelPosition",
              "description": "Description for labelPosition",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TextArea",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "autosize",
              "description": "Description for autosize",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/textArea\").AutosizeRow"
              }
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "rows",
              "description": "Description for rows",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "cols",
              "description": "Description for cols",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxCount",
              "description": "Description for maxCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "readonly",
              "description": "Description for readonly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showCounter",
              "description": "Description for showCounter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: string, e: Event) => void"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onInput",
              "description": "Description for onInput",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onKeyUp",
              "description": "Description for onKeyUp",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onKeyPress",
              "description": "Description for onKeyPress",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onEnterPress",
              "description": "Description for onEnterPress",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onPressEnter",
              "description": "Description for onPressEnter",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onResize",
              "description": "Description for onResize",
              "value": {
                "type": "(data: { height: number; }) => void"
              }
            },
            {
              "name": "getValueLength",
              "description": "Description for getValueLength",
              "value": {
                "type": "(value: string) => number"
              }
            },
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "minlength",
              "description": "Description for minlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxlength",
              "description": "Description for maxlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onUpdate:value",
              "description": "Description for onUpdate:value",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {}
            },
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {}
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {}
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {}
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {}
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {}
            },
            {
              "name": "onCopy",
              "description": "Description for onCopy",
              "value": {}
            },
            {
              "name": "onCut",
              "description": "Description for onCut",
              "value": {}
            },
            {
              "name": "onPaste",
              "description": "Description for onPaste",
              "value": {}
            },
            {
              "name": "onCompositionend",
              "description": "Description for onCompositionend",
              "value": {}
            },
            {
              "name": "onCompositionstart",
              "description": "Description for onCompositionstart",
              "value": {}
            },
            {
              "name": "onCompositionupdate",
              "description": "Description for onCompositionupdate",
              "value": {}
            },
            {
              "name": "onDrag",
              "description": "Description for onDrag",
              "value": {}
            },
            {
              "name": "onDragend",
              "description": "Description for onDragend",
              "value": {}
            },
            {
              "name": "onDragenter",
              "description": "Description for onDragenter",
              "value": {}
            },
            {
              "name": "onDragexit",
              "description": "Description for onDragexit",
              "value": {}
            },
            {
              "name": "onDragleave",
              "description": "Description for onDragleave",
              "value": {}
            },
            {
              "name": "onDragover",
              "description": "Description for onDragover",
              "value": {}
            },
            {
              "name": "onDragstart",
              "description": "Description for onDragstart",
              "value": {}
            },
            {
              "name": "onDrop",
              "description": "Description for onDrop",
              "value": {}
            },
            {
              "name": "onFocusin",
              "description": "Description for onFocusin",
              "value": {}
            },
            {
              "name": "onFocusout",
              "description": "Description for onFocusout",
              "value": {}
            },
            {
              "name": "onBeforeinput",
              "description": "Description for onBeforeinput",
              "value": {}
            },
            {
              "name": "onReset",
              "description": "Description for onReset",
              "value": {}
            },
            {
              "name": "onSubmit",
              "description": "Description for onSubmit",
              "value": {}
            },
            {
              "name": "onInvalid",
              "description": "Description for onInvalid",
              "value": {}
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {}
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {}
            },
            {
              "name": "onKeyup",
              "description": "Description for onKeyup",
              "value": {}
            },
            {
              "name": "onAuxclick",
              "description": "Description for onAuxclick",
              "value": {}
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {}
            },
            {
              "name": "onContextmenu",
              "description": "Description for onContextmenu",
              "value": {}
            },
            {
              "name": "onDblclick",
              "description": "Description for onDblclick",
              "value": {}
            },
            {
              "name": "onMousedown",
              "description": "Description for onMousedown",
              "value": {}
            },
            {
              "name": "onMouseenter",
              "description": "Description for onMouseenter",
              "value": {}
            },
            {
              "name": "onMouseleave",
              "description": "Description for onMouseleave",
              "value": {}
            },
            {
              "name": "onMousemove",
              "description": "Description for onMousemove",
              "value": {}
            },
            {
              "name": "onMouseout",
              "description": "Description for onMouseout",
              "value": {}
            },
            {
              "name": "onMouseover",
              "description": "Description for onMouseover",
              "value": {}
            },
            {
              "name": "onMouseup",
              "description": "Description for onMouseup",
              "value": {}
            },
            {
              "name": "onAbort",
              "description": "Description for onAbort",
              "value": {}
            },
            {
              "name": "onCanplay",
              "description": "Description for onCanplay",
              "value": {}
            },
            {
              "name": "onCanplaythrough",
              "description": "Description for onCanplaythrough",
              "value": {}
            },
            {
              "name": "onDurationchange",
              "description": "Description for onDurationchange",
              "value": {}
            },
            {
              "name": "onEmptied",
              "description": "Description for onEmptied",
              "value": {}
            },
            {
              "name": "onEncrypted",
              "description": "Description for onEncrypted",
              "value": {}
            },
            {
              "name": "onEnded",
              "description": "Description for onEnded",
              "value": {}
            },
            {
              "name": "onLoadeddata",
              "description": "Description for onLoadeddata",
              "value": {}
            },
            {
              "name": "onLoadedmetadata",
              "description": "Description for onLoadedmetadata",
              "value": {}
            },
            {
              "name": "onLoadstart",
              "description": "Description for onLoadstart",
              "value": {}
            },
            {
              "name": "onPause",
              "description": "Description for onPause",
              "value": {}
            },
            {
              "name": "onPlay",
              "description": "Description for onPlay",
              "value": {}
            },
            {
              "name": "onPlaying",
              "description": "Description for onPlaying",
              "value": {}
            },
            {
              "name": "onProgress",
              "description": "Description for onProgress",
              "value": {}
            },
            {
              "name": "onRatechange",
              "description": "Description for onRatechange",
              "value": {}
            },
            {
              "name": "onSeeked",
              "description": "Description for onSeeked",
              "value": {}
            },
            {
              "name": "onSeeking",
              "description": "Description for onSeeking",
              "value": {}
            },
            {
              "name": "onStalled",
              "description": "Description for onStalled",
              "value": {}
            },
            {
              "name": "onSuspend",
              "description": "Description for onSuspend",
              "value": {}
            },
            {
              "name": "onTimeupdate",
              "description": "Description for onTimeupdate",
              "value": {}
            },
            {
              "name": "onVolumechange",
              "description": "Description for onVolumechange",
              "value": {}
            },
            {
              "name": "onWaiting",
              "description": "Description for onWaiting",
              "value": {}
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {}
            },
            {
              "name": "onScroll",
              "description": "Description for onScroll",
              "value": {}
            },
            {
              "name": "onScrollend",
              "description": "Description for onScrollend",
              "value": {}
            },
            {
              "name": "onTouchcancel",
              "description": "Description for onTouchcancel",
              "value": {}
            },
            {
              "name": "onTouchend",
              "description": "Description for onTouchend",
              "value": {}
            },
            {
              "name": "onTouchmove",
              "description": "Description for onTouchmove",
              "value": {}
            },
            {
              "name": "onTouchstart",
              "description": "Description for onTouchstart",
              "value": {}
            },
            {
              "name": "onPointerdown",
              "description": "Description for onPointerdown",
              "value": {}
            },
            {
              "name": "onPointermove",
              "description": "Description for onPointermove",
              "value": {}
            },
            {
              "name": "onPointerup",
              "description": "Description for onPointerup",
              "value": {}
            },
            {
              "name": "onPointercancel",
              "description": "Description for onPointercancel",
              "value": {}
            },
            {
              "name": "onPointerenter",
              "description": "Description for onPointerenter",
              "value": {}
            },
            {
              "name": "onPointerleave",
              "description": "Description for onPointerleave",
              "value": {}
            },
            {
              "name": "onPointerover",
              "description": "Description for onPointerover",
              "value": {}
            },
            {
              "name": "onPointerout",
              "description": "Description for onPointerout",
              "value": {}
            },
            {
              "name": "onWheel",
              "description": "Description for onWheel",
              "value": {}
            },
            {
              "name": "onAnimationstart",
              "description": "Description for onAnimationstart",
              "value": {}
            },
            {
              "name": "onAnimationend",
              "description": "Description for onAnimationend",
              "value": {}
            },
            {
              "name": "onAnimationiteration",
              "description": "Description for onAnimationiteration",
              "value": {}
            },
            {
              "name": "onTransitionend",
              "description": "Description for onTransitionend",
              "value": {}
            },
            {
              "name": "onTransitionstart",
              "description": "Description for onTransitionstart",
              "value": {}
            },
            {
              "name": "autocomplete",
              "description": "Description for autocomplete",
              "value": {}
            },
            {
              "name": "autofocus",
              "description": "Description for autofocus",
              "value": {}
            },
            {
              "name": "form",
              "description": "Description for form",
              "value": {}
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {}
            },
            {
              "name": "required",
              "description": "Description for required",
              "value": {}
            },
            {
              "name": "innerHTML",
              "description": "Description for innerHTML",
              "value": {}
            },
            {
              "name": "accesskey",
              "description": "Description for accesskey",
              "value": {}
            },
            {
              "name": "contenteditable",
              "description": "Description for contenteditable",
              "value": {}
            },
            {
              "name": "contextmenu",
              "description": "Description for contextmenu",
              "value": {}
            },
            {
              "name": "dir",
              "description": "Description for dir",
              "value": {}
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {}
            },
            {
              "name": "hidden",
              "description": "Description for hidden",
              "value": {}
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {}
            },
            {
              "name": "inert",
              "description": "Description for inert",
              "value": {}
            },
            {
              "name": "lang",
              "description": "Description for lang",
              "value": {}
            },
            {
              "name": "spellcheck",
              "description": "Description for spellcheck",
              "value": {}
            },
            {
              "name": "tabindex",
              "description": "Description for tabindex",
              "value": {}
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {}
            },
            {
              "name": "translate",
              "description": "Description for translate",
              "value": {}
            },
            {
              "name": "radiogroup",
              "description": "Description for radiogroup",
              "value": {}
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {}
            },
            {
              "name": "about",
              "description": "Description for about",
              "value": {}
            },
            {
              "name": "datatype",
              "description": "Description for datatype",
              "value": {}
            },
            {
              "name": "inlist",
              "description": "Description for inlist",
              "value": {}
            },
            {
              "name": "property",
              "description": "Description for property",
              "value": {}
            },
            {
              "name": "resource",
              "description": "Description for resource",
              "value": {}
            },
            {
              "name": "typeof",
              "description": "Description for typeof",
              "value": {}
            },
            {
              "name": "vocab",
              "description": "Description for vocab",
              "value": {}
            },
            {
              "name": "autocapitalize",
              "description": "Description for autocapitalize",
              "value": {}
            },
            {
              "name": "autocorrect",
              "description": "Description for autocorrect",
              "value": {}
            },
            {
              "name": "autosave",
              "description": "Description for autosave",
              "value": {}
            },
            {
              "name": "color",
              "description": "Description for color",
              "value": {}
            },
            {
              "name": "itemprop",
              "description": "Description for itemprop",
              "value": {}
            },
            {
              "name": "itemscope",
              "description": "Description for itemscope",
              "value": {}
            },
            {
              "name": "itemtype",
              "description": "Description for itemtype",
              "value": {}
            },
            {
              "name": "itemid",
              "description": "Description for itemid",
              "value": {}
            },
            {
              "name": "itemref",
              "description": "Description for itemref",
              "value": {}
            },
            {
              "name": "results",
              "description": "Description for results",
              "value": {}
            },
            {
              "name": "security",
              "description": "Description for security",
              "value": {}
            },
            {
              "name": "unselectable",
              "description": "Description for unselectable",
              "value": {}
            },
            {
              "name": "inputmode",
              "description": "Description for inputmode",
              "value": {}
            },
            {
              "name": "is",
              "description": "Description for is",
              "value": {}
            },
            {
              "name": "aria-activedescendant",
              "description": "Description for aria-activedescendant",
              "value": {}
            },
            {
              "name": "aria-atomic",
              "description": "Description for aria-atomic",
              "value": {}
            },
            {
              "name": "aria-autocomplete",
              "description": "Description for aria-autocomplete",
              "value": {}
            },
            {
              "name": "aria-busy",
              "description": "Description for aria-busy",
              "value": {}
            },
            {
              "name": "aria-checked",
              "description": "Description for aria-checked",
              "value": {}
            },
            {
              "name": "aria-colcount",
              "description": "Description for aria-colcount",
              "value": {}
            },
            {
              "name": "aria-colindex",
              "description": "Description for aria-colindex",
              "value": {}
            },
            {
              "name": "aria-colspan",
              "description": "Description for aria-colspan",
              "value": {}
            },
            {
              "name": "aria-controls",
              "description": "Description for aria-controls",
              "value": {}
            },
            {
              "name": "aria-current",
              "description": "Description for aria-current",
              "value": {}
            },
            {
              "name": "aria-details",
              "description": "Description for aria-details",
              "value": {}
            },
            {
              "name": "aria-disabled",
              "description": "Description for aria-disabled",
              "value": {}
            },
            {
              "name": "aria-dropeffect",
              "description": "Description for aria-dropeffect",
              "value": {}
            },
            {
              "name": "aria-expanded",
              "description": "Description for aria-expanded",
              "value": {}
            },
            {
              "name": "aria-flowto",
              "description": "Description for aria-flowto",
              "value": {}
            },
            {
              "name": "aria-grabbed",
              "description": "Description for aria-grabbed",
              "value": {}
            },
            {
              "name": "aria-haspopup",
              "description": "Description for aria-haspopup",
              "value": {}
            },
            {
              "name": "aria-hidden",
              "description": "Description for aria-hidden",
              "value": {}
            },
            {
              "name": "aria-keyshortcuts",
              "description": "Description for aria-keyshortcuts",
              "value": {}
            },
            {
              "name": "aria-level",
              "description": "Description for aria-level",
              "value": {}
            },
            {
              "name": "aria-live",
              "description": "Description for aria-live",
              "value": {}
            },
            {
              "name": "aria-modal",
              "description": "Description for aria-modal",
              "value": {}
            },
            {
              "name": "aria-multiline",
              "description": "Description for aria-multiline",
              "value": {}
            },
            {
              "name": "aria-multiselectable",
              "description": "Description for aria-multiselectable",
              "value": {}
            },
            {
              "name": "aria-orientation",
              "description": "Description for aria-orientation",
              "value": {}
            },
            {
              "name": "aria-owns",
              "description": "Description for aria-owns",
              "value": {}
            },
            {
              "name": "aria-placeholder",
              "description": "Description for aria-placeholder",
              "value": {}
            },
            {
              "name": "aria-posinset",
              "description": "Description for aria-posinset",
              "value": {}
            },
            {
              "name": "aria-pressed",
              "description": "Description for aria-pressed",
              "value": {}
            },
            {
              "name": "aria-readonly",
              "description": "Description for aria-readonly",
              "value": {}
            },
            {
              "name": "aria-relevant",
              "description": "Description for aria-relevant",
              "value": {}
            },
            {
              "name": "aria-roledescription",
              "description": "Description for aria-roledescription",
              "value": {}
            },
            {
              "name": "aria-rowcount",
              "description": "Description for aria-rowcount",
              "value": {}
            },
            {
              "name": "aria-rowindex",
              "description": "Description for aria-rowindex",
              "value": {}
            },
            {
              "name": "aria-rowspan",
              "description": "Description for aria-rowspan",
              "value": {}
            },
            {
              "name": "aria-selected",
              "description": "Description for aria-selected",
              "value": {}
            },
            {
              "name": "aria-setsize",
              "description": "Description for aria-setsize",
              "value": {}
            },
            {
              "name": "aria-sort",
              "description": "Description for aria-sort",
              "value": {}
            },
            {
              "name": "aria-valuemax",
              "description": "Description for aria-valuemax",
              "value": {}
            },
            {
              "name": "aria-valuemin",
              "description": "Description for aria-valuemin",
              "value": {}
            },
            {
              "name": "aria-valuenow",
              "description": "Description for aria-valuenow",
              "value": {}
            },
            {
              "name": "aria-valuetext",
              "description": "Description for aria-valuetext",
              "value": {}
            },
            {
              "name": "dirname",
              "description": "Description for dirname",
              "value": {}
            },
            {
              "name": "wrap",
              "description": "Description for wrap",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "InputNumber",
          "attributes": [
            {
              "name": "autofocus",
              "description": "Description for autofocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "formatter",
              "description": "Description for formatter",
              "value": {
                "type": "(value: string | number) => string"
              }
            },
            {
              "name": "forwardedRef",
              "description": "Description for forwardedRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "hideButtons",
              "description": "Description for hideButtons",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "innerButtons",
              "description": "Description for innerButtons",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "keepFocus",
              "description": "Description for keepFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "min",
              "description": "Description for min",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "parser",
              "description": "Description for parser",
              "value": {
                "type": "(value: string) => string"
              }
            },
            {
              "name": "precision",
              "description": "Description for precision",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "pressInterval",
              "description": "Description for pressInterval",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "pressTimeout",
              "description": "Description for pressTimeout",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "shiftStep",
              "description": "Description for shiftStep",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "step",
              "description": "Description for step",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: string | number, e?: any) => void"
              }
            },
            {
              "name": "onDownClick",
              "description": "Description for onDownClick",
              "value": {
                "type": "(value: string, e: MouseEvent) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onNumberChange",
              "description": "Description for onNumberChange",
              "value": {
                "type": "(value: number, e?: any) => void"
              }
            },
            {
              "name": "onUpClick",
              "description": "Description for onUpClick",
              "value": {
                "type": "(value: string, e: MouseEvent) => void"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "addonBefore",
              "description": "Description for addonBefore",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "addonAfter",
              "description": "Description for addonAfter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "\"password\""
              }
            },
            {
              "name": "readonly",
              "description": "Description for readonly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "hideSuffix",
              "description": "Description for hideSuffix",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "clearIcon",
              "description": "Description for clearIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/index\").ValidateStatus"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onInput",
              "description": "Description for onInput",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "onKeyUp",
              "description": "Description for onKeyUp",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onKeyPress",
              "description": "Description for onKeyPress",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onEnterPress",
              "description": "Description for onEnterPress",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "inputStyle",
              "description": "Description for inputStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "getValueLength",
              "description": "Description for getValueLength",
              "value": {
                "type": "(value: string) => number"
              }
            },
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "minlength",
              "description": "Description for minlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxlength",
              "description": "Description for maxlength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showClearIgnoreDisabled",
              "description": "Description for showClearIgnoreDisabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onlyBorder",
              "description": "Description for onlyBorder",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onCopy",
              "description": "Description for onCopy",
              "value": {}
            },
            {
              "name": "onCut",
              "description": "Description for onCut",
              "value": {}
            },
            {
              "name": "onPaste",
              "description": "Description for onPaste",
              "value": {}
            },
            {
              "name": "onCompositionend",
              "description": "Description for onCompositionend",
              "value": {}
            },
            {
              "name": "onCompositionstart",
              "description": "Description for onCompositionstart",
              "value": {}
            },
            {
              "name": "onCompositionupdate",
              "description": "Description for onCompositionupdate",
              "value": {}
            },
            {
              "name": "onDrag",
              "description": "Description for onDrag",
              "value": {}
            },
            {
              "name": "onDragend",
              "description": "Description for onDragend",
              "value": {}
            },
            {
              "name": "onDragenter",
              "description": "Description for onDragenter",
              "value": {}
            },
            {
              "name": "onDragexit",
              "description": "Description for onDragexit",
              "value": {}
            },
            {
              "name": "onDragleave",
              "description": "Description for onDragleave",
              "value": {}
            },
            {
              "name": "onDragover",
              "description": "Description for onDragover",
              "value": {}
            },
            {
              "name": "onDragstart",
              "description": "Description for onDragstart",
              "value": {}
            },
            {
              "name": "onDrop",
              "description": "Description for onDrop",
              "value": {}
            },
            {
              "name": "onFocusin",
              "description": "Description for onFocusin",
              "value": {}
            },
            {
              "name": "onFocusout",
              "description": "Description for onFocusout",
              "value": {}
            },
            {
              "name": "onBeforeinput",
              "description": "Description for onBeforeinput",
              "value": {}
            },
            {
              "name": "onReset",
              "description": "Description for onReset",
              "value": {}
            },
            {
              "name": "onSubmit",
              "description": "Description for onSubmit",
              "value": {}
            },
            {
              "name": "onInvalid",
              "description": "Description for onInvalid",
              "value": {}
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {}
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {}
            },
            {
              "name": "onKeydown",
              "description": "Description for onKeydown",
              "value": {}
            },
            {
              "name": "onKeypress",
              "description": "Description for onKeypress",
              "value": {}
            },
            {
              "name": "onKeyup",
              "description": "Description for onKeyup",
              "value": {}
            },
            {
              "name": "onAuxclick",
              "description": "Description for onAuxclick",
              "value": {}
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {}
            },
            {
              "name": "onContextmenu",
              "description": "Description for onContextmenu",
              "value": {}
            },
            {
              "name": "onDblclick",
              "description": "Description for onDblclick",
              "value": {}
            },
            {
              "name": "onMousedown",
              "description": "Description for onMousedown",
              "value": {}
            },
            {
              "name": "onMouseenter",
              "description": "Description for onMouseenter",
              "value": {}
            },
            {
              "name": "onMouseleave",
              "description": "Description for onMouseleave",
              "value": {}
            },
            {
              "name": "onMousemove",
              "description": "Description for onMousemove",
              "value": {}
            },
            {
              "name": "onMouseout",
              "description": "Description for onMouseout",
              "value": {}
            },
            {
              "name": "onMouseover",
              "description": "Description for onMouseover",
              "value": {}
            },
            {
              "name": "onMouseup",
              "description": "Description for onMouseup",
              "value": {}
            },
            {
              "name": "onAbort",
              "description": "Description for onAbort",
              "value": {}
            },
            {
              "name": "onCanplay",
              "description": "Description for onCanplay",
              "value": {}
            },
            {
              "name": "onCanplaythrough",
              "description": "Description for onCanplaythrough",
              "value": {}
            },
            {
              "name": "onDurationchange",
              "description": "Description for onDurationchange",
              "value": {}
            },
            {
              "name": "onEmptied",
              "description": "Description for onEmptied",
              "value": {}
            },
            {
              "name": "onEncrypted",
              "description": "Description for onEncrypted",
              "value": {}
            },
            {
              "name": "onEnded",
              "description": "Description for onEnded",
              "value": {}
            },
            {
              "name": "onLoadeddata",
              "description": "Description for onLoadeddata",
              "value": {}
            },
            {
              "name": "onLoadedmetadata",
              "description": "Description for onLoadedmetadata",
              "value": {}
            },
            {
              "name": "onLoadstart",
              "description": "Description for onLoadstart",
              "value": {}
            },
            {
              "name": "onPause",
              "description": "Description for onPause",
              "value": {}
            },
            {
              "name": "onPlay",
              "description": "Description for onPlay",
              "value": {}
            },
            {
              "name": "onPlaying",
              "description": "Description for onPlaying",
              "value": {}
            },
            {
              "name": "onProgress",
              "description": "Description for onProgress",
              "value": {}
            },
            {
              "name": "onRatechange",
              "description": "Description for onRatechange",
              "value": {}
            },
            {
              "name": "onSeeked",
              "description": "Description for onSeeked",
              "value": {}
            },
            {
              "name": "onSeeking",
              "description": "Description for onSeeking",
              "value": {}
            },
            {
              "name": "onStalled",
              "description": "Description for onStalled",
              "value": {}
            },
            {
              "name": "onSuspend",
              "description": "Description for onSuspend",
              "value": {}
            },
            {
              "name": "onTimeupdate",
              "description": "Description for onTimeupdate",
              "value": {}
            },
            {
              "name": "onVolumechange",
              "description": "Description for onVolumechange",
              "value": {}
            },
            {
              "name": "onWaiting",
              "description": "Description for onWaiting",
              "value": {}
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {}
            },
            {
              "name": "onScroll",
              "description": "Description for onScroll",
              "value": {}
            },
            {
              "name": "onScrollend",
              "description": "Description for onScrollend",
              "value": {}
            },
            {
              "name": "onTouchcancel",
              "description": "Description for onTouchcancel",
              "value": {}
            },
            {
              "name": "onTouchend",
              "description": "Description for onTouchend",
              "value": {}
            },
            {
              "name": "onTouchmove",
              "description": "Description for onTouchmove",
              "value": {}
            },
            {
              "name": "onTouchstart",
              "description": "Description for onTouchstart",
              "value": {}
            },
            {
              "name": "onPointerdown",
              "description": "Description for onPointerdown",
              "value": {}
            },
            {
              "name": "onPointermove",
              "description": "Description for onPointermove",
              "value": {}
            },
            {
              "name": "onPointerup",
              "description": "Description for onPointerup",
              "value": {}
            },
            {
              "name": "onPointercancel",
              "description": "Description for onPointercancel",
              "value": {}
            },
            {
              "name": "onPointerenter",
              "description": "Description for onPointerenter",
              "value": {}
            },
            {
              "name": "onPointerleave",
              "description": "Description for onPointerleave",
              "value": {}
            },
            {
              "name": "onPointerover",
              "description": "Description for onPointerover",
              "value": {}
            },
            {
              "name": "onPointerout",
              "description": "Description for onPointerout",
              "value": {}
            },
            {
              "name": "onWheel",
              "description": "Description for onWheel",
              "value": {}
            },
            {
              "name": "onAnimationstart",
              "description": "Description for onAnimationstart",
              "value": {}
            },
            {
              "name": "onAnimationend",
              "description": "Description for onAnimationend",
              "value": {}
            },
            {
              "name": "onAnimationiteration",
              "description": "Description for onAnimationiteration",
              "value": {}
            },
            {
              "name": "onTransitionend",
              "description": "Description for onTransitionend",
              "value": {}
            },
            {
              "name": "onTransitionstart",
              "description": "Description for onTransitionstart",
              "value": {}
            },
            {
              "name": "accept",
              "description": "Description for accept",
              "value": {}
            },
            {
              "name": "alt",
              "description": "Description for alt",
              "value": {}
            },
            {
              "name": "autocomplete",
              "description": "Description for autocomplete",
              "value": {}
            },
            {
              "name": "capture",
              "description": "Description for capture",
              "value": {}
            },
            {
              "name": "checked",
              "description": "Description for checked",
              "value": {}
            },
            {
              "name": "crossorigin",
              "description": "Description for crossorigin",
              "value": {}
            },
            {
              "name": "enterKeyHint",
              "description": "Description for enterKeyHint",
              "value": {}
            },
            {
              "name": "form",
              "description": "Description for form",
              "value": {}
            },
            {
              "name": "formaction",
              "description": "Description for formaction",
              "value": {}
            },
            {
              "name": "formenctype",
              "description": "Description for formenctype",
              "value": {}
            },
            {
              "name": "formmethod",
              "description": "Description for formmethod",
              "value": {}
            },
            {
              "name": "formnovalidate",
              "description": "Description for formnovalidate",
              "value": {}
            },
            {
              "name": "formtarget",
              "description": "Description for formtarget",
              "value": {}
            },
            {
              "name": "height",
              "description": "Description for height",
              "value": {}
            },
            {
              "name": "indeterminate",
              "description": "Description for indeterminate",
              "value": {}
            },
            {
              "name": "list",
              "description": "Description for list",
              "value": {}
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {}
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {}
            },
            {
              "name": "pattern",
              "description": "Description for pattern",
              "value": {}
            },
            {
              "name": "required",
              "description": "Description for required",
              "value": {}
            },
            {
              "name": "src",
              "description": "Description for src",
              "value": {}
            },
            {
              "name": "width",
              "description": "Description for width",
              "value": {}
            },
            {
              "name": "innerHTML",
              "description": "Description for innerHTML",
              "value": {}
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {}
            },
            {
              "name": "accesskey",
              "description": "Description for accesskey",
              "value": {}
            },
            {
              "name": "contenteditable",
              "description": "Description for contenteditable",
              "value": {}
            },
            {
              "name": "contextmenu",
              "description": "Description for contextmenu",
              "value": {}
            },
            {
              "name": "dir",
              "description": "Description for dir",
              "value": {}
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {}
            },
            {
              "name": "hidden",
              "description": "Description for hidden",
              "value": {}
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {}
            },
            {
              "name": "inert",
              "description": "Description for inert",
              "value": {}
            },
            {
              "name": "lang",
              "description": "Description for lang",
              "value": {}
            },
            {
              "name": "spellcheck",
              "description": "Description for spellcheck",
              "value": {}
            },
            {
              "name": "tabindex",
              "description": "Description for tabindex",
              "value": {}
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {}
            },
            {
              "name": "translate",
              "description": "Description for translate",
              "value": {}
            },
            {
              "name": "radiogroup",
              "description": "Description for radiogroup",
              "value": {}
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {}
            },
            {
              "name": "about",
              "description": "Description for about",
              "value": {}
            },
            {
              "name": "datatype",
              "description": "Description for datatype",
              "value": {}
            },
            {
              "name": "inlist",
              "description": "Description for inlist",
              "value": {}
            },
            {
              "name": "property",
              "description": "Description for property",
              "value": {}
            },
            {
              "name": "resource",
              "description": "Description for resource",
              "value": {}
            },
            {
              "name": "typeof",
              "description": "Description for typeof",
              "value": {}
            },
            {
              "name": "vocab",
              "description": "Description for vocab",
              "value": {}
            },
            {
              "name": "autocapitalize",
              "description": "Description for autocapitalize",
              "value": {}
            },
            {
              "name": "autocorrect",
              "description": "Description for autocorrect",
              "value": {}
            },
            {
              "name": "autosave",
              "description": "Description for autosave",
              "value": {}
            },
            {
              "name": "color",
              "description": "Description for color",
              "value": {}
            },
            {
              "name": "itemprop",
              "description": "Description for itemprop",
              "value": {}
            },
            {
              "name": "itemscope",
              "description": "Description for itemscope",
              "value": {}
            },
            {
              "name": "itemtype",
              "description": "Description for itemtype",
              "value": {}
            },
            {
              "name": "itemid",
              "description": "Description for itemid",
              "value": {}
            },
            {
              "name": "itemref",
              "description": "Description for itemref",
              "value": {}
            },
            {
              "name": "results",
              "description": "Description for results",
              "value": {}
            },
            {
              "name": "security",
              "description": "Description for security",
              "value": {}
            },
            {
              "name": "unselectable",
              "description": "Description for unselectable",
              "value": {}
            },
            {
              "name": "inputmode",
              "description": "Description for inputmode",
              "value": {}
            },
            {
              "name": "is",
              "description": "Description for is",
              "value": {}
            },
            {
              "name": "aria-activedescendant",
              "description": "Description for aria-activedescendant",
              "value": {}
            },
            {
              "name": "aria-atomic",
              "description": "Description for aria-atomic",
              "value": {}
            },
            {
              "name": "aria-autocomplete",
              "description": "Description for aria-autocomplete",
              "value": {}
            },
            {
              "name": "aria-busy",
              "description": "Description for aria-busy",
              "value": {}
            },
            {
              "name": "aria-checked",
              "description": "Description for aria-checked",
              "value": {}
            },
            {
              "name": "aria-colcount",
              "description": "Description for aria-colcount",
              "value": {}
            },
            {
              "name": "aria-colindex",
              "description": "Description for aria-colindex",
              "value": {}
            },
            {
              "name": "aria-colspan",
              "description": "Description for aria-colspan",
              "value": {}
            },
            {
              "name": "aria-controls",
              "description": "Description for aria-controls",
              "value": {}
            },
            {
              "name": "aria-current",
              "description": "Description for aria-current",
              "value": {}
            },
            {
              "name": "aria-details",
              "description": "Description for aria-details",
              "value": {}
            },
            {
              "name": "aria-disabled",
              "description": "Description for aria-disabled",
              "value": {}
            },
            {
              "name": "aria-dropeffect",
              "description": "Description for aria-dropeffect",
              "value": {}
            },
            {
              "name": "aria-expanded",
              "description": "Description for aria-expanded",
              "value": {}
            },
            {
              "name": "aria-flowto",
              "description": "Description for aria-flowto",
              "value": {}
            },
            {
              "name": "aria-grabbed",
              "description": "Description for aria-grabbed",
              "value": {}
            },
            {
              "name": "aria-haspopup",
              "description": "Description for aria-haspopup",
              "value": {}
            },
            {
              "name": "aria-hidden",
              "description": "Description for aria-hidden",
              "value": {}
            },
            {
              "name": "aria-keyshortcuts",
              "description": "Description for aria-keyshortcuts",
              "value": {}
            },
            {
              "name": "aria-level",
              "description": "Description for aria-level",
              "value": {}
            },
            {
              "name": "aria-live",
              "description": "Description for aria-live",
              "value": {}
            },
            {
              "name": "aria-modal",
              "description": "Description for aria-modal",
              "value": {}
            },
            {
              "name": "aria-multiline",
              "description": "Description for aria-multiline",
              "value": {}
            },
            {
              "name": "aria-multiselectable",
              "description": "Description for aria-multiselectable",
              "value": {}
            },
            {
              "name": "aria-orientation",
              "description": "Description for aria-orientation",
              "value": {}
            },
            {
              "name": "aria-owns",
              "description": "Description for aria-owns",
              "value": {}
            },
            {
              "name": "aria-placeholder",
              "description": "Description for aria-placeholder",
              "value": {}
            },
            {
              "name": "aria-posinset",
              "description": "Description for aria-posinset",
              "value": {}
            },
            {
              "name": "aria-pressed",
              "description": "Description for aria-pressed",
              "value": {}
            },
            {
              "name": "aria-readonly",
              "description": "Description for aria-readonly",
              "value": {}
            },
            {
              "name": "aria-relevant",
              "description": "Description for aria-relevant",
              "value": {}
            },
            {
              "name": "aria-roledescription",
              "description": "Description for aria-roledescription",
              "value": {}
            },
            {
              "name": "aria-rowcount",
              "description": "Description for aria-rowcount",
              "value": {}
            },
            {
              "name": "aria-rowindex",
              "description": "Description for aria-rowindex",
              "value": {}
            },
            {
              "name": "aria-rowspan",
              "description": "Description for aria-rowspan",
              "value": {}
            },
            {
              "name": "aria-selected",
              "description": "Description for aria-selected",
              "value": {}
            },
            {
              "name": "aria-setsize",
              "description": "Description for aria-setsize",
              "value": {}
            },
            {
              "name": "aria-sort",
              "description": "Description for aria-sort",
              "value": {}
            },
            {
              "name": "aria-valuemax",
              "description": "Description for aria-valuemax",
              "value": {}
            },
            {
              "name": "aria-valuemin",
              "description": "Description for aria-valuemin",
              "value": {}
            },
            {
              "name": "aria-valuenow",
              "description": "Description for aria-valuenow",
              "value": {}
            },
            {
              "name": "aria-valuetext",
              "description": "Description for aria-valuetext",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "List",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "bordered",
              "description": "Description for bordered",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "footer",
              "description": "Description for footer",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "layout",
              "description": "Description for layout",
              "value": {
                "type": "\"horizontal\" | \"vertical\""
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "split",
              "description": "Description for split",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "dataSource",
              "description": "Description for dataSource",
              "value": {
                "type": "T[]"
              }
            },
            {
              "name": "renderItem",
              "description": "Description for renderItem",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "grid",
              "description": "Description for grid",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/list/list-context\").Grid"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loadMore",
              "description": "Description for loadMore",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onRightClick",
              "description": "Description for onRightClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "ListItem",
          "attributes": [
            {
              "name": "extra",
              "description": "Description for extra",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "main",
              "description": "Description for main",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "align",
              "description": "Description for align",
              "value": {
                "type": "\"center\" | \"flex-start\" | \"flex-end\" | \"baseline\" | \"stretch\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onRightClick",
              "description": "Description for onRightClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "LocaleConsumer",
          "attributes": [
            {
              "name": "componentName",
              "description": "Description for componentName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "ChildrenRender<T>"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "NavFooter",
          "attributes": [
            {
              "name": "collapseButton",
              "description": "Description for collapseButton",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "collapseText",
              "description": "Description for collapseText",
              "value": {
                "type": "(collapsed?: boolean) => any"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(event: MouseEvent) => void"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "NavHeader",
          "attributes": [
            {
              "name": "link",
              "description": "Description for link",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "linkOptions",
              "description": "Description for linkOptions",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "logo",
              "description": "Description for logo",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/Header\").Logo"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Description for text",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Nav",
          "attributes": [
            {
              "name": "bodyStyle",
              "description": "Description for bodyStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "defaultIsCollapsed",
              "description": "Description for defaultIsCollapsed",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultOpenKeys",
              "description": "Description for defaultOpenKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "defaultSelectedKeys",
              "description": "Description for defaultSelectedKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "expandIcon",
              "description": "Description for expandIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "footer",
              "description": "Description for footer",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/Footer\").NavFooterProps"
              }
            },
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/Header\").NavHeaderProps"
              }
            },
            {
              "name": "isCollapsed",
              "description": "Description for isCollapsed",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "Description for items",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/index\").NavItems"
              }
            },
            {
              "name": "limitIndent",
              "description": "Description for limitIndent",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/index\").Mode"
              }
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "openKeys",
              "description": "Description for openKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "selectedKeys",
              "description": "Description for selectedKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "subNavCloseDelay",
              "description": "Description for subNavCloseDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "subNavMotion",
              "description": "Description for subNavMotion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "subNavOpenDelay",
              "description": "Description for subNavOpenDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "toggleIconPosition",
              "description": "Description for toggleIconPosition",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "tooltipHideDelay",
              "description": "Description for tooltipHideDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tooltipShowDelay",
              "description": "Description for tooltipShowDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(data: { itemKey: string; domEvent: MouseEvent; isOpen: boolean; }) => void"
              }
            },
            {
              "name": "onCollapseChange",
              "description": "Description for onCollapseChange",
              "value": {
                "type": "(isCollapse: boolean) => void"
              }
            },
            {
              "name": "onDeselect",
              "description": "Description for onDeselect",
              "value": {
                "type": "(data?: any) => void"
              }
            },
            {
              "name": "onOpenChange",
              "description": "Description for onOpenChange",
              "value": {
                "type": "(data: { itemKey: string | number; openKeys: (string | number)[]; domEvent: MouseEvent; isOpen: boolean; }) => void"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/index\").OnSelectedData) => void"
              }
            },
            {
              "name": "renderWrapper",
              "description": "Description for renderWrapper",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "NavItem",
          "attributes": [
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "(ele: HTMLLIElement) => void"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "level",
              "description": "Description for level",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "link",
              "description": "Description for link",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "linkOptions",
              "description": "Description for linkOptions",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").AnchorHTMLAttributes"
              }
            },
            {
              "name": "tabIndex",
              "description": "Description for tabIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "text",
              "description": "Description for text",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "tooltipHideDelay",
              "description": "Description for tooltipHideDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tooltipShowDelay",
              "description": "Description for tooltipShowDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/navigation/Item\").SelectedData) => void"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "items",
              "description": "Description for items",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "maxHeight",
              "description": "Description for maxHeight",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "toggleIcon",
              "description": "Description for toggleIcon",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "indent",
              "description": "Description for indent",
              "value": {
                "type": "number | boolean"
              }
            },
            {
              "name": "isCollapsed",
              "description": "Description for isCollapsed",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "isSubNav",
              "description": "Description for isSubNav",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "SubNav",
          "attributes": [
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownStyle",
              "description": "Description for dropdownStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "indent",
              "description": "Description for indent",
              "value": {
                "type": "number | boolean"
              }
            },
            {
              "name": "isCollapsed",
              "description": "Description for isCollapsed",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "isOpen",
              "description": "Description for isOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "level",
              "description": "Description for level",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Description for maxHeight",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "text",
              "description": "Description for text",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "expandIcon",
              "description": "Description for expandIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "OverflowList",
          "attributes": [
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "collapseFrom",
              "description": "Description for collapseFrom",
              "value": {
                "type": "\"start\" | \"end\""
              }
            },
            {
              "name": "items",
              "description": "Description for items",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/overflowList/index\").OverflowItem[]"
              }
            },
            {
              "name": "minVisibleItems",
              "description": "Description for minVisibleItems",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onIntersect",
              "description": "Description for onIntersect",
              "value": {
                "type": "(res: { [key: string]: IntersectionObserverEntry; }) => void"
              }
            },
            {
              "name": "onOverflow",
              "description": "Description for onOverflow",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/overflowList/index\").OverflowItem[]) => void"
              }
            },
            {
              "name": "overflowRenderer",
              "description": "Description for overflowRenderer",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/overflowList/index\").OverflowItem[]) => any"
              }
            },
            {
              "name": "renderMode",
              "description": "Description for renderMode",
              "value": {
                "type": "\"collapse\" | \"scroll\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "threshold",
              "description": "Description for threshold",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "visibleItemRenderer",
              "description": "Description for visibleItemRenderer",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/overflowList/index\").OverflowItem, index: number) => any"
              }
            },
            {
              "name": "wrapperClassName",
              "description": "Description for wrapperClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "wrapperStyle",
              "description": "Description for wrapperStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/overflowList/index\").OverflowItem) => Key)"
              }
            },
            {
              "name": "onVisibleStateChange",
              "description": "Description for onVisibleStateChange",
              "value": {
                "type": "(visibleState: Map<string, boolean>) => void"
              }
            },
            {
              "name": "overflowRenderDirection",
              "description": "Description for overflowRenderDirection",
              "value": {
                "type": "\"start\" | \"end\" | \"both\""
              }
            },
            {
              "name": "collapseMask",
              "description": "Description for collapseMask",
              "value": {
                "type": "any"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Pagination",
          "attributes": [
            {
              "name": "total",
              "description": "Description for total",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "showTotal",
              "description": "Description for showTotal",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "pageSize",
              "description": "Description for pageSize",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "pageSizeOpts",
              "description": "Description for pageSizeOpts",
              "value": {
                "type": "number[]"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\""
              }
            },
            {
              "name": "currentPage",
              "description": "Description for currentPage",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "defaultCurrentPage",
              "description": "Description for defaultCurrentPage",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onPageChange",
              "description": "Description for onPageChange",
              "value": {
                "type": "(currentPage: number) => void"
              }
            },
            {
              "name": "onPageSizeChange",
              "description": "Description for onPageSizeChange",
              "value": {
                "type": "(newPageSize: number) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(currentPage: number, pageSize: number) => void"
              }
            },
            {
              "name": "prevText",
              "description": "Description for prevText",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "nextText",
              "description": "Description for nextText",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "showSizeChanger",
              "description": "Description for showSizeChanger",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showQuickJumper",
              "description": "Description for showQuickJumper",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "popoverZIndex",
              "description": "Description for popoverZIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "popoverPosition",
              "description": "Description for popoverPosition",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "hideOnSinglePage",
              "description": "Description for hideOnSinglePage",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "hoverShowPageSelect",
              "description": "Description for hoverShowPageSelect",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Popconfirm",
          "attributes": [
            {
              "name": "cancelText",
              "description": "Description for cancelText",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "cancelButtonProps",
              "description": "Description for cancelButtonProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/index\").ButtonProps"
              }
            },
            {
              "name": "cancelType",
              "description": "Description for cancelType",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "defaultVisible",
              "description": "Description for defaultVisible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "okText",
              "description": "Description for okText",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "okType",
              "description": "Description for okType",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/Button\").Type"
              }
            },
            {
              "name": "okButtonProps",
              "description": "Description for okButtonProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/button/index\").ButtonProps"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "visible",
              "description": "Description for visible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "trigger",
              "description": "Description for trigger",
              "value": {
                "type": "\"hover\" | \"click\" | \"focus\" | \"custom\" | \"contextMenu\""
              }
            },
            {
              "name": "showCloseIcon",
              "description": "Description for showCloseIcon",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "onCancel",
              "description": "Description for onCancel",
              "value": {
                "type": "(e: MouseEvent) => void | Promise<any>"
              }
            },
            {
              "name": "onConfirm",
              "description": "Description for onConfirm",
              "value": {
                "type": "(e: MouseEvent) => void | Promise<any>"
              }
            },
            {
              "name": "onVisibleChange",
              "description": "Description for onVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "onClickOutSide",
              "description": "Description for onClickOutSide",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "content",
              "description": "Description for content",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "margin",
              "description": "Description for margin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string | any[]"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number | { x: number; y: number; }"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "arrowStyle",
              "description": "Description for arrowStyle",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/popover/index\").ArrowStyle"
              }
            },
            {
              "name": "arrowBounding",
              "description": "Description for arrowBounding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tooltip/index\").ArrowBounding"
              }
            },
            {
              "name": "arrowPointAtCenter",
              "description": "Description for arrowPointAtCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "rePosKey",
              "description": "Description for rePosKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "closeOnEsc",
              "description": "Description for closeOnEsc",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "guardFocus",
              "description": "Description for guardFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "returnFocusOnClose",
              "description": "Description for returnFocusOnClose",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onEscKeyDown",
              "description": "Description for onEscKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "clickToHide",
              "description": "Description for clickToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableFocusListener",
              "description": "Description for disableFocusListener",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "afterClose",
              "description": "Description for afterClose",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "disableArrowKeyDown",
              "description": "Description for disableArrowKeyDown",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Popover",
          "attributes": [
            {
              "name": "content",
              "description": "Description for content",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "visible",
              "description": "Description for visible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "margin",
              "description": "Description for margin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "trigger",
              "description": "Description for trigger",
              "value": {
                "type": "\"hover\" | \"click\" | \"focus\" | \"custom\" | \"contextMenu\""
              }
            },
            {
              "name": "contentClassName",
              "description": "Description for contentClassName",
              "value": {
                "type": "string | any[]"
              }
            },
            {
              "name": "onVisibleChange",
              "description": "Description for onVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "onClickOutSide",
              "description": "Description for onClickOutSide",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number | { x: number; y: number; }"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "arrowStyle",
              "description": "Description for arrowStyle",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/popover/index\").ArrowStyle"
              }
            },
            {
              "name": "arrowBounding",
              "description": "Description for arrowBounding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tooltip/index\").ArrowBounding"
              }
            },
            {
              "name": "arrowPointAtCenter",
              "description": "Description for arrowPointAtCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "rePosKey",
              "description": "Description for rePosKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "closeOnEsc",
              "description": "Description for closeOnEsc",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "guardFocus",
              "description": "Description for guardFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "returnFocusOnClose",
              "description": "Description for returnFocusOnClose",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onEscKeyDown",
              "description": "Description for onEscKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "clickToHide",
              "description": "Description for clickToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableFocusListener",
              "description": "Description for disableFocusListener",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "afterClose",
              "description": "Description for afterClose",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "disableArrowKeyDown",
              "description": "Description for disableArrowKeyDown",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "cancelText",
              "description": "Description for cancelText",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "okText",
              "description": "Description for okText",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Progress",
          "attributes": [
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-valuetext",
              "description": "Description for aria-valuetext",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "direction",
              "description": "Description for direction",
              "value": {
                "type": "\"horizontal\" | \"vertical\""
              }
            },
            {
              "name": "format",
              "description": "Description for format",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "orbitStroke",
              "description": "Description for orbitStroke",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "percent",
              "description": "Description for percent",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "showInfo",
              "description": "Description for showInfo",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "stroke",
              "description": "Description for stroke",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/progress/generates\").StrokeArr"
              }
            },
            {
              "name": "strokeGradient",
              "description": "Description for strokeGradient",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "strokeLinecap",
              "description": "Description for strokeLinecap",
              "value": {
                "type": "\"square\" | \"round\""
              }
            },
            {
              "name": "strokeWidth",
              "description": "Description for strokeWidth",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "\"circle\" | \"line\""
              }
            },
            {
              "name": "width",
              "description": "Description for width",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Rating",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "count",
              "description": "Description for count",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "allowHalf",
              "description": "Description for allowHalf",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "allowClear",
              "description": "Description for allowClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: number) => void"
              }
            },
            {
              "name": "onHoverChange",
              "description": "Description for onHoverChange",
              "value": {
                "type": "(value: number) => void"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "character",
              "description": "Description for character",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "tabIndex",
              "description": "Description for tabIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: FocusEvent) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent | KeyboardEvent, index: number) => void"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "number | \"small\" | \"default\""
              }
            },
            {
              "name": "tooltips",
              "description": "Description for tooltips",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "ScrollList",
          "attributes": [
            {
              "name": "header",
              "description": "Description for header",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "footer",
              "description": "Description for footer",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "bodyHeight",
              "description": "Description for bodyHeight",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "ScrollItem",
          "attributes": [
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "cycled",
              "description": "Description for cycled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "list",
              "description": "Description for list",
              "value": {
                "type": "T[]"
              }
            },
            {
              "name": "selectedIndex",
              "description": "Description for selectedIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(data: T) => void"
              }
            },
            {
              "name": "transform",
              "description": "Description for transform",
              "value": {
                "type": "(value: any, text: string) => string"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "class",
              "description": "Description for class",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Skeleton",
          "attributes": [
            {
              "name": "active",
              "description": "Description for active",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Avatar",
          "attributes": [
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "shape",
              "description": "Description for shape",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Slider",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "railStyle",
              "description": "Description for railStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "number | number[]"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showMarkLabel",
              "description": "Description for showMarkLabel",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "included",
              "description": "Description for included",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "marks",
              "description": "Description for marks",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/slider/foundation\").Marks"
              }
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "min",
              "description": "Description for min",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "range",
              "description": "Description for range",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "step",
              "description": "Description for step",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tipFormatter",
              "description": "Description for tipFormatter",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/slider/foundation\").tipFormatterBasicType[]) => any"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "number | number[]"
              }
            },
            {
              "name": "vertical",
              "description": "Description for vertical",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onAfterChange",
              "description": "Description for onAfterChange",
              "value": {
                "type": "(value: number | number[]) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: number | number[]) => void"
              }
            },
            {
              "name": "onMouseUp",
              "description": "Description for onMouseUp",
              "value": {
                "type": "(e: any) => void"
              }
            },
            {
              "name": "tooltipOnMark",
              "description": "Description for tooltipOnMark",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "tooltipVisible",
              "description": "Description for tooltipVisible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "showBoundary",
              "description": "Description for showBoundary",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "verticalReverse",
              "description": "Description for verticalReverse",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-valuetext",
              "description": "Description for aria-valuetext",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "getAriaValueText",
              "description": "Description for getAriaValueText",
              "value": {
                "type": "(value: number, index?: number) => string"
              }
            },
            {
              "name": "handleDot",
              "description": "Description for handleDot",
              "value": {
                "type": "{ size?: string; color?: string; } & { size?: string; color?: string; }[]"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Icon",
          "attributes": [
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "component",
              "description": "Description for component",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").VueElement"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Spin",
          "attributes": [
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/spin/index\").SpinSize"
              }
            },
            {
              "name": "spinning",
              "description": "Description for spinning",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "indicator",
              "description": "Description for indicator",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "delay",
              "description": "Description for delay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tip",
              "description": "Description for tip",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "wrapperClassName",
              "description": "Description for wrapperClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "childStyle",
              "description": "Description for childStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").StyleValue"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Step",
          "attributes": [
            {
              "name": "description",
              "description": "Description for description",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "status",
              "description": "Description for status",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/steps/step\").Status"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "any"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Switch",
          "attributes": [
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "defaultChecked",
              "description": "Description for defaultChecked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "checked",
              "description": "Description for checked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(checked: boolean, e: any) => void"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onMouseEnter",
              "description": "Description for onMouseEnter",
              "value": {
                "type": "(e: MouseEvent) => any"
              }
            },
            {
              "name": "onMouseLeave",
              "description": "Description for onMouseLeave",
              "value": {
                "type": "(e: MouseEvent) => any"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "checkedText",
              "description": "Description for checkedText",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "uncheckedText",
              "description": "Description for uncheckedText",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Table",
          "attributes": [
            {
              "name": "bordered",
              "description": "Description for bordered",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "bodyWrapperRef",
              "description": "Description for bodyWrapperRef",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "childrenRecordName",
              "description": "Description for childrenRecordName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "clickGroupedRowToExpand",
              "description": "Description for clickGroupedRowToExpand",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "columns",
              "description": "Description for columns",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").ColumnProps<RecordType>[]"
              }
            },
            {
              "name": "components",
              "description": "Description for components",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").TableComponents"
              }
            },
            {
              "name": "dataSource",
              "description": "Description for dataSource",
              "value": {
                "type": "RecordType[]"
              }
            },
            {
              "name": "defaultExpandAllGroupRows",
              "description": "Description for defaultExpandAllGroupRows",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultExpandAllRows",
              "description": "Description for defaultExpandAllRows",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultExpandedRowKeys",
              "description": "Description for defaultExpandedRowKeys",
              "value": {
                "type": "(string | number)[]"
              }
            },
            {
              "name": "empty",
              "description": "Description for empty",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "expandAllGroupRows",
              "description": "Description for expandAllGroupRows",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "expandAllRows",
              "description": "Description for expandAllRows",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "expandCellFixed",
              "description": "Description for expandCellFixed",
              "value": {
                "type": "boolean | \"left\" | \"right\""
              }
            },
            {
              "name": "expandIcon",
              "description": "Description for expandIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "expandedRowKeys",
              "description": "Description for expandedRowKeys",
              "value": {
                "type": "(string | number)[]"
              }
            },
            {
              "name": "expandedRowRender",
              "description": "Description for expandedRowRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").ExpandedRowRender<RecordType>"
              }
            },
            {
              "name": "expandRowByClick",
              "description": "Description for expandRowByClick",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "footer",
              "description": "Description for footer",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "getVirtualizedListRef",
              "description": "Description for getVirtualizedListRef",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").GetVirtualizedListRef"
              }
            },
            {
              "name": "groupBy",
              "description": "Description for groupBy",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").GroupBy<RecordType>"
              }
            },
            {
              "name": "hideExpandedColumn",
              "description": "Description for hideExpandedColumn",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "indentSize",
              "description": "Description for indentSize",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "pagination",
              "description": "Description for pagination",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").Pagination"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "renderGroupSection",
              "description": "Description for renderGroupSection",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").RenderGroupSection"
              }
            },
            {
              "name": "renderPagination",
              "description": "Description for renderPagination",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").RenderPagination"
              }
            },
            {
              "name": "resizable",
              "description": "Description for resizable",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").Resizable<RecordType>"
              }
            },
            {
              "name": "rowExpandable",
              "description": "Description for rowExpandable",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").RowExpandable<RecordType>"
              }
            },
            {
              "name": "rowKey",
              "description": "Description for rowKey",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").RowKey<RecordType>"
              }
            },
            {
              "name": "rowSelection",
              "description": "Description for rowSelection",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").RowSelection<RecordType>"
              }
            },
            {
              "name": "scroll",
              "description": "Description for scroll",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").Scroll"
              }
            },
            {
              "name": "showHeader",
              "description": "Description for showHeader",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"middle\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "title",
              "description": "Description for title",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "virtualized",
              "description": "Description for virtualized",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").Virtualized"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnChange<RecordType>"
              }
            },
            {
              "name": "onExpand",
              "description": "Description for onExpand",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnExpand<RecordType>"
              }
            },
            {
              "name": "onExpandedRowsChange",
              "description": "Description for onExpandedRowsChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnExpandedRowsChange<RecordType>"
              }
            },
            {
              "name": "onGroupedRow",
              "description": "Description for onGroupedRow",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnGroupedRow<RecordType>"
              }
            },
            {
              "name": "onHeaderRow",
              "description": "Description for onHeaderRow",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnHeaderRow<RecordType>"
              }
            },
            {
              "name": "onRow",
              "description": "Description for onRow",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").OnRow<RecordType>"
              }
            },
            {
              "name": "sticky",
              "description": "Description for sticky",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/table/interface\").Sticky"
              }
            },
            {
              "name": "direction",
              "description": "Description for direction",
              "value": {
                "type": "(\"@kousum/vue3-window/dist/types/createGridComponent\").CSSDirection"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Tabs",
          "attributes": [
            {
              "name": "activeKey",
              "description": "Description for activeKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "collapsible",
              "description": "Description for collapsible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "contentStyle",
              "description": "Description for contentStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "defaultActiveKey",
              "description": "Description for defaultActiveKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "lazyRender",
              "description": "Description for lazyRender",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(activeKey: string) => void"
              }
            },
            {
              "name": "onTabClick",
              "description": "Description for onTabClick",
              "value": {
                "type": "(activeKey: string, e: MouseEvent) => void"
              }
            },
            {
              "name": "renderTabBar",
              "description": "Description for renderTabBar",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").PublicProps>) => any"
              }
            },
            {
              "name": "showRestInDropdown",
              "description": "Description for showRestInDropdown",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tabs/interface\").TabSize"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "tabBarClassName",
              "description": "Description for tabBarClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "tabBarExtraContent",
              "description": "Description for tabBarExtraContent",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "tabBarStyle",
              "description": "Description for tabBarStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "tabList",
              "description": "Description for tabList",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tabs/interface\").PlainTab[]"
              }
            },
            {
              "name": "tabPaneMotion",
              "description": "Description for tabPaneMotion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "tabPosition",
              "description": "Description for tabPosition",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tabs/interface\").TabPosition"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tabs/interface\").TabType"
              }
            },
            {
              "name": "onTabClose",
              "description": "Description for onTabClose",
              "value": {
                "type": "(tabKey: string) => void"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "more",
              "description": "Description for more",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/dropdown/index\").DropdownProps; }"
              }
            },
            {
              "name": "onVisibleTabsChange",
              "description": "Description for onVisibleTabsChange",
              "value": {
                "type": "(visibleState: Map<string, boolean>) => void"
              }
            },
            {
              "name": "visibleTabsStyle",
              "description": "Description for visibleTabsStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "arrowPosition",
              "description": "Description for arrowPosition",
              "value": {
                "type": "\"start\" | \"end\" | \"both\""
              }
            },
            {
              "name": "renderArrow",
              "description": "Description for renderArrow",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TabPane",
          "attributes": [
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "itemKey",
              "description": "Description for itemKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "tab",
              "description": "Description for tab",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "closable",
              "description": "Description for closable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "tabIndex",
              "description": "Description for tabIndex",
              "value": {
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TagGroup",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "maxTagCount",
              "description": "Description for maxTagCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "restCount",
              "description": "Description for restCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tagList",
              "description": "Description for tagList",
              "value": {
                "type": "any[]"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"large\""
              }
            },
            {
              "name": "showPopover",
              "description": "Description for showPopover",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "popoverProps",
              "description": "Description for popoverProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/popover/index\").PopoverProps"
              }
            },
            {
              "name": "avatarShape",
              "description": "Description for avatarShape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").AvatarShape"
              }
            },
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onTagClose",
              "description": "Description for onTagClose",
              "value": {
                "type": "(tagChildren: any, event: MouseEvent, tagKey: string | number) => void"
              }
            },
            {
              "name": "onPlusNMouseEnter",
              "description": "Description for onPlusNMouseEnter",
              "value": {
                "type": "() => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Tag",
          "attributes": [
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "tagKey",
              "description": "Description for tagKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").TagSize"
              }
            },
            {
              "name": "color",
              "description": "Description for color",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").TagColor"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").TagType"
              }
            },
            {
              "name": "closable",
              "description": "Description for closable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "visible",
              "description": "Description for visible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onClose",
              "description": "Description for onClose",
              "value": {
                "type": "(tagChildren: any, event: MouseEvent, tagKey: string | number) => void"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "prefixIcon",
              "description": "Description for prefixIcon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "suffixIcon",
              "description": "Description for suffixIcon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "avatarSrc",
              "description": "Description for avatarSrc",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "avatarShape",
              "description": "Description for avatarShape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").AvatarShape"
              }
            },
            {
              "name": "shape",
              "description": "Description for shape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").TagShape"
              }
            },
            {
              "name": "onKeydown",
              "description": "Description for onKeydown",
              "value": {
                "type": "(e: Event) => void"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "tabIndex",
              "description": "Description for tabIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onMouseenter",
              "description": "Description for onMouseenter",
              "value": {
                "type": "() => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TagGroup",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "maxTagCount",
              "description": "Description for maxTagCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "tagList",
              "description": "Description for tagList",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").TagProps)[]"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"large\""
              }
            },
            {
              "name": "showPopover",
              "description": "Description for showPopover",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "popoverProps",
              "description": "Description for popoverProps",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "avatarShape",
              "description": "Description for avatarShape",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tag/interface\").AvatarShape"
              }
            },
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TagInput",
          "attributes": [
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "clearIcon",
              "description": "Description for clearIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "inputValue",
              "description": "Description for inputValue",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "maxLength",
              "description": "Description for maxLength",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "max",
              "description": "Description for max",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "maxTagCount",
              "description": "Description for maxTagCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "showRestTagsPopover",
              "description": "Description for showRestTagsPopover",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "restTagsPopoverProps",
              "description": "Description for restTagsPopoverProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/popover/index\").PopoverProps"
              }
            },
            {
              "name": "showContentTooltip",
              "description": "Description for showContentTooltip",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "allowDuplicates",
              "description": "Description for allowDuplicates",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "addOnBlur",
              "description": "Description for addOnBlur",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "expandRestTagsOnClick",
              "description": "Description for expandRestTagsOnClick",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onAdd",
              "description": "Description for onAdd",
              "value": {
                "type": "(addedValue: string[]) => void"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(value: string[]) => void"
              }
            },
            {
              "name": "onExceed",
              "description": "Description for onExceed",
              "value": {
                "type": "(value: string[]) => void"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onInputChange",
              "description": "Description for onInputChange",
              "value": {
                "type": "(value: string, e: MouseEvent) => void"
              }
            },
            {
              "name": "onInputExceed",
              "description": "Description for onInputExceed",
              "value": {
                "type": "(value: string) => void"
              }
            },
            {
              "name": "onKeyDown",
              "description": "Description for onKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "onRemove",
              "description": "Description for onRemove",
              "value": {
                "type": "(removedValue: string, idx: number) => void"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderTagItem",
              "description": "Description for renderTagItem",
              "value": {
                "type": "(value: string, index: number, onClose: () => void) => any"
              }
            },
            {
              "name": "separator",
              "description": "Description for separator",
              "value": {
                "type": "string | string[]"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "\"small\" | \"default\" | \"large\""
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "ValidateStatus"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "autoFocus",
              "description": "Description for autoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Timeline",
          "attributes": [
            {
              "name": "mode",
              "description": "Description for mode",
              "value": {
                "type": "\"left\" | \"right\" | \"center\" | \"alternate\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "dataSource",
              "description": "Description for dataSource",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/timeline/index\").Data[]"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TimelineItem",
          "attributes": [
            {
              "name": "color",
              "description": "Description for color",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>[]"
              }
            },
            {
              "name": "time",
              "description": "Description for time",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\" | \"ongoing\""
              }
            },
            {
              "name": "dot",
              "description": "Description for dot",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "extra",
              "description": "Description for extra",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"left\" | \"right\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "onClick",
              "description": "Description for onClick",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Tooltip",
          "attributes": [
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "trigger",
              "description": "Description for trigger",
              "value": {
                "type": "\"hover\" | \"click\" | \"focus\" | \"custom\" | \"contextMenu\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "clickToHide",
              "description": "Description for clickToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "visible",
              "description": "Description for visible",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "content",
              "description": "Description for content",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "prefixCls",
              "description": "Description for prefixCls",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onVisibleChange",
              "description": "Description for onVisibleChange",
              "value": {
                "type": "(visible: boolean) => void"
              }
            },
            {
              "name": "onClickOutSide",
              "description": "Description for onClickOutSide",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "spacing",
              "description": "Description for spacing",
              "value": {
                "type": "number | { x: number; y: number; }"
              }
            },
            {
              "name": "margin",
              "description": "Description for margin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "showArrow",
              "description": "Description for showArrow",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "rePosKey",
              "description": "Description for rePosKey",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "arrowBounding",
              "description": "Description for arrowBounding",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tooltip/index\").ArrowBounding"
              }
            },
            {
              "name": "transformFromCenter",
              "description": "Description for transformFromCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "arrowPointAtCenter",
              "description": "Description for arrowPointAtCenter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapWhenSpecial",
              "description": "Description for wrapWhenSpecial",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "clickTriggerToHide",
              "description": "Description for clickTriggerToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapperClassName",
              "description": "Description for wrapperClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "closeOnEsc",
              "description": "Description for closeOnEsc",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "guardFocus",
              "description": "Description for guardFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "returnFocusOnClose",
              "description": "Description for returnFocusOnClose",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onEscKeyDown",
              "description": "Description for onEscKeyDown",
              "value": {
                "type": "(e: KeyboardEvent) => void"
              }
            },
            {
              "name": "disableArrowKeyDown",
              "description": "Description for disableArrowKeyDown",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "wrapperId",
              "description": "Description for wrapperId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableFocusListener",
              "description": "Description for disableFocusListener",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "afterClose",
              "description": "Description for afterClose",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "keepDOM",
              "description": "Description for keepDOM",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Transfer",
          "attributes": [
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dataSource",
              "description": "Description for dataSource",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").DataSource"
              }
            },
            {
              "name": "filter",
              "description": "Description for filter",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").DataItem) => boolean)"
              }
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "(string | number)[]"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "(string | number)[]"
              }
            },
            {
              "name": "inputProps",
              "description": "Description for inputProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/index\").InputProps"
              }
            },
            {
              "name": "type",
              "description": "Description for type",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").Type"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").EmptyContent"
              }
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "treeProps",
              "description": "Description for treeProps",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeProps, \"onChange\" | \"value\" | \"ref\">"
              }
            },
            {
              "name": "showPath",
              "description": "Description for showPath",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").DataItem[]) => void"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").DataItem) => void"
              }
            },
            {
              "name": "onDeselect",
              "description": "Description for onDeselect",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").DataItem) => void"
              }
            },
            {
              "name": "onSearch",
              "description": "Description for onSearch",
              "value": {
                "type": "(sunInput: string) => void"
              }
            },
            {
              "name": "renderSourceItem",
              "description": "Description for renderSourceItem",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderSelectedItem",
              "description": "Description for renderSelectedItem",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tagInput/index\").SortableItemFuncArg) => any"
              }
            },
            {
              "name": "renderSourcePanel",
              "description": "Description for renderSourcePanel",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").SourcePanelProps) => any"
              }
            },
            {
              "name": "renderSelectedPanel",
              "description": "Description for renderSelectedPanel",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/transfer/index\").SelectedPanelProps) => any"
              }
            },
            {
              "name": "renderSourceHeader",
              "description": "Description for renderSourceHeader",
              "value": {
                "type": "(headProps: SourceHeaderProps) => any"
              }
            },
            {
              "name": "renderSelectedHeader",
              "description": "Description for renderSelectedHeader",
              "value": {
                "type": "(headProps: SelectedHeaderProps) => any"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Collapse",
          "attributes": [
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "duration",
              "description": "Description for duration",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "onMotionEnd",
              "description": "Description for onMotionEnd",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "motionType",
              "description": "Description for motionType",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Tree",
          "attributes": [
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").Value"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "filterTreeNode",
              "description": "Description for filterTreeNode",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => boolean)"
              }
            },
            {
              "name": "searchRender",
              "description": "Description for searchRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").SearchRenderProps) => any)"
              }
            },
            {
              "name": "searchStyle",
              "description": "Description for searchStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "treeData",
              "description": "Description for treeData",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData[]"
              }
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").Value"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>)"
              }
            },
            {
              "name": "keyMaps",
              "description": "Description for keyMaps",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/treeUtil\").KeyMapProps"
              }
            },
            {
              "name": "loadData",
              "description": "Description for loadData",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => Promise<void>"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").Value) => void"
              }
            },
            {
              "name": "onDoubleClick",
              "description": "Description for onDoubleClick",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => void"
              }
            },
            {
              "name": "onDragEnd",
              "description": "Description for onDragEnd",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").DragProps) => void"
              }
            },
            {
              "name": "onDragLeave",
              "description": "Description for onDragLeave",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").DragProps) => void"
              }
            },
            {
              "name": "onDragOver",
              "description": "Description for onDragOver",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").DragProps) => void"
              }
            },
            {
              "name": "onDragStart",
              "description": "Description for onDragStart",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").DragProps) => void"
              }
            },
            {
              "name": "onDragEnter",
              "description": "Description for onDragEnter",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").DragEnterProps) => void"
              }
            },
            {
              "name": "onDrop",
              "description": "Description for onDrop",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").OnDragProps) => void"
              }
            },
            {
              "name": "onExpand",
              "description": "Description for onExpand",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").ExpandedOtherProps) => void"
              }
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => void"
              }
            },
            {
              "name": "onContextMenu",
              "description": "Description for onContextMenu",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => void"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => void"
              }
            },
            {
              "name": "renderDraggingNode",
              "description": "Description for renderDraggingNode",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => HTMLElement"
              }
            },
            {
              "name": "renderFullLabel",
              "description": "Description for renderFullLabel",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").RenderFullLabelProps) => any"
              }
            },
            {
              "name": "renderLabel",
              "description": "Description for renderLabel",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => any"
              }
            },
            {
              "name": "autoMergeValue",
              "description": "Description for autoMergeValue",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "selectedKey",
              "description": "Description for selectedKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "Description for role",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "autoExpandParent",
              "description": "Description for autoExpandParent",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "autoExpandWhenDragEnter",
              "description": "Description for autoExpandWhenDragEnter",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "blockNode",
              "description": "Description for blockNode",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "expandAll",
              "description": "Description for expandAll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultExpandAll",
              "description": "Description for defaultExpandAll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultExpandedKeys",
              "description": "Description for defaultExpandedKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "directory",
              "description": "Description for directory",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disableStrictly",
              "description": "Description for disableStrictly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "expandAction",
              "description": "Description for expandAction",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").ExpandAction"
              }
            },
            {
              "name": "expandedKeys",
              "description": "Description for expandedKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "hideDraggingNode",
              "description": "Description for hideDraggingNode",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "labelEllipsis",
              "description": "Description for labelEllipsis",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "leafOnly",
              "description": "Description for leafOnly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loadedKeys",
              "description": "Description for loadedKeys",
              "value": {
                "type": "string[]"
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onChangeWithObject",
              "description": "Description for onChangeWithObject",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "onSearch",
              "description": "Description for onSearch",
              "value": {
                "type": "(sunInput: string, filteredExpandedKeys: string[]) => void"
              }
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "searchClassName",
              "description": "Description for searchClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "searchPlaceholder",
              "description": "Description for searchPlaceholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showFilteredOnly",
              "description": "Description for showFilteredOnly",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showLine",
              "description": "Description for showLine",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "treeDataSimpleJson",
              "description": "Description for treeDataSimpleJson",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").TreeDataSimpleJson"
              }
            },
            {
              "name": "treeNodeFilterProp",
              "description": "Description for treeNodeFilterProp",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "virtualize",
              "description": "Description for virtualize",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").Virtualize"
              }
            },
            {
              "name": "checkRelation",
              "description": "Description for checkRelation",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").CheckRelation"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TreeNode",
          "attributes": [
            {
              "name": "label",
              "description": "Description for label",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "keyword",
              "description": "Description for keyword",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "data",
              "description": "Description for data",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").BasicTreeNodeData"
              }
            },
            {
              "name": "filtered",
              "description": "Description for filtered",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "treeNodeFilterProp",
              "description": "Description for treeNodeFilterProp",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "nodeInstance",
              "description": "Description for nodeInstance",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "level",
              "description": "Description for level",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "empty",
              "description": "Description for empty",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "display",
              "description": "Description for display",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "expanded",
              "description": "Description for expanded",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "selected",
              "description": "Description for selected",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "checked",
              "description": "Description for checked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "halfChecked",
              "description": "Description for halfChecked",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "active",
              "description": "Description for active",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loaded",
              "description": "Description for loaded",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Description for loading",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "isLeaf",
              "description": "Description for isLeaf",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "pos",
              "description": "Description for pos",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "children",
              "description": "Description for children",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/tree/foundation\").BasicTreeNodeData[]"
              }
            },
            {
              "name": "directory",
              "description": "Description for directory",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "selectedKey",
              "description": "Description for selectedKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "motionKey",
              "description": "Description for motionKey",
              "value": {
                "type": "string | string[]"
              }
            },
            {
              "name": "eventKey",
              "description": "Description for eventKey",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "icon",
              "description": "Description for icon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "isEnd",
              "description": "Description for isEnd",
              "value": {
                "type": "boolean[]"
              }
            },
            {
              "name": "showLine",
              "description": "Description for showLine",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "TreeSelect",
          "attributes": [
            {
              "name": "aria-describedby",
              "description": "Description for aria-describedby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-errormessage",
              "description": "Description for aria-errormessage",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-invalid",
              "description": "Description for aria-invalid",
              "value": {
                "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
              }
            },
            {
              "name": "aria-labelledby",
              "description": "Description for aria-labelledby",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-required",
              "description": "Description for aria-required",
              "value": {
                "type": "boolean | \"false\" | \"true\""
              }
            },
            {
              "name": "motion",
              "description": "Description for motion",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/_base/base\").Motion"
              }
            },
            {
              "name": "mouseEnterDelay",
              "description": "Description for mouseEnterDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "mouseLeaveDelay",
              "description": "Description for mouseLeaveDelay",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "arrowIcon",
              "description": "Description for arrowIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "clearIcon",
              "description": "Description for clearIcon",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "autoAdjustOverflow",
              "description": "Description for autoAdjustOverflow",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "clickToHide",
              "description": "Description for clickToHide",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultOpen",
              "description": "Description for defaultOpen",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownClassName",
              "description": "Description for dropdownClassName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "dropdownMatchSelectWidth",
              "description": "Description for dropdownMatchSelectWidth",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dropdownStyle",
              "description": "Description for dropdownStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "dropdownMargin",
              "description": "Description for dropdownMargin",
              "value": {
                "type": "number | { marginLeft: number; marginTop: number; marginRight: number; marginBottom: number; }"
              }
            },
            {
              "name": "insetLabel",
              "description": "Description for insetLabel",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "insetLabelId",
              "description": "Description for insetLabelId",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "maxTagCount",
              "description": "Description for maxTagCount",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "motionExpand",
              "description": "Description for motionExpand",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "optionListStyle",
              "description": "Description for optionListStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "outerBottomSlot",
              "description": "Description for outerBottomSlot",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "outerTopSlot",
              "description": "Description for outerTopSlot",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "placeholder",
              "description": "Description for placeholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "prefix",
              "description": "Description for prefix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "position",
              "description": "Description for position",
              "value": {
                "type": "\"top\" | \"topLeft\" | \"topRight\" | \"left\" | \"leftTop\" | \"leftBottom\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"leftTopOver\" | \"rightTopOver\" | \"leftBottomOver\" | \"rightBottomOver\""
              }
            },
            {
              "name": "searchAutoFocus",
              "description": "Description for searchAutoFocus",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "searchPlaceholder",
              "description": "Description for searchPlaceholder",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "showSearchClear",
              "description": "Description for showSearchClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "size",
              "description": "Description for size",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/treeSelect/foundation\").Size"
              }
            },
            {
              "name": "suffix",
              "description": "Description for suffix",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "treeNodeLabelProp",
              "description": "Description for treeNodeLabelProp",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "zIndex",
              "description": "Description for zIndex",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "searchPosition",
              "description": "Description for searchPosition",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "stopPropagation",
              "description": "Description for stopPropagation",
              "value": {
                "type": "string | boolean"
              }
            },
            {
              "name": "searchRender",
              "description": "Description for searchRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/input/index\").InputProps) => any)"
              }
            },
            {
              "name": "onSelect",
              "description": "Description for onSelect",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/tree/interface\").TreeNodeData) => void"
              }
            },
            {
              "name": "renderSelectedItem",
              "description": "Description for renderSelectedItem",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/treeSelect/index\").RenderSelectedItem"
              }
            },
            {
              "name": "getPopupContainer",
              "description": "Description for getPopupContainer",
              "value": {
                "type": "() => HTMLElement"
              }
            },
            {
              "name": "triggerRender",
              "description": "Description for triggerRender",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/treeSelect/index\").TriggerRenderProps) => any"
              }
            },
            {
              "name": "onBlur",
              "description": "Description for onBlur",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/treeSelect/index\").OnChange"
              }
            },
            {
              "name": "onFocus",
              "description": "Description for onFocus",
              "value": {
                "type": "(e: MouseEvent) => void"
              }
            },
            {
              "name": "onVisibleChange",
              "description": "Description for onVisibleChange",
              "value": {
                "type": "(isVisible: boolean) => void"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "(e: MouseEvent | KeyboardEvent) => void"
              }
            },
            {
              "name": "autoMergeValue",
              "description": "Description for autoMergeValue",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Description for id",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "aria-label",
              "description": "Description for aria-label",
              "value": {}
            },
            {
              "name": "borderless",
              "description": "Description for borderless",
              "value": {}
            },
            {
              "name": "onLoad",
              "description": "Description for onLoad",
              "value": {}
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {}
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {}
            },
            {
              "name": "loadData",
              "description": "Description for loadData",
              "value": {}
            },
            {
              "name": "autoExpandParent",
              "description": "Description for autoExpandParent",
              "value": {}
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {}
            },
            {
              "name": "expandAll",
              "description": "Description for expandAll",
              "value": {}
            },
            {
              "name": "defaultExpandAll",
              "description": "Description for defaultExpandAll",
              "value": {}
            },
            {
              "name": "defaultExpandedKeys",
              "description": "Description for defaultExpandedKeys",
              "value": {}
            },
            {
              "name": "disableStrictly",
              "description": "Description for disableStrictly",
              "value": {}
            },
            {
              "name": "expandAction",
              "description": "Description for expandAction",
              "value": {}
            },
            {
              "name": "expandedKeys",
              "description": "Description for expandedKeys",
              "value": {}
            },
            {
              "name": "labelEllipsis",
              "description": "Description for labelEllipsis",
              "value": {}
            },
            {
              "name": "leafOnly",
              "description": "Description for leafOnly",
              "value": {}
            },
            {
              "name": "loadedKeys",
              "description": "Description for loadedKeys",
              "value": {}
            },
            {
              "name": "onChangeWithObject",
              "description": "Description for onChangeWithObject",
              "value": {}
            },
            {
              "name": "onSearch",
              "description": "Description for onSearch",
              "value": {}
            },
            {
              "name": "preventScroll",
              "description": "Description for preventScroll",
              "value": {}
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {}
            },
            {
              "name": "showFilteredOnly",
              "description": "Description for showFilteredOnly",
              "value": {}
            },
            {
              "name": "treeNodeFilterProp",
              "description": "Description for treeNodeFilterProp",
              "value": {}
            },
            {
              "name": "virtualize",
              "description": "Description for virtualize",
              "value": {}
            },
            {
              "name": "checkRelation",
              "description": "Description for checkRelation",
              "value": {}
            },
            {
              "name": "showRestTagsPopover",
              "description": "Description for showRestTagsPopover",
              "value": {}
            },
            {
              "name": "restTagsPopoverProps",
              "description": "Description for restTagsPopoverProps",
              "value": {}
            },
            {
              "name": "clickTriggerToHide",
              "description": "Description for clickTriggerToHide",
              "value": {}
            },
            {
              "name": "value",
              "description": "Description for value",
              "value": {}
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {}
            },
            {
              "name": "defaultValue",
              "description": "Description for defaultValue",
              "value": {}
            },
            {
              "name": "emptyContent",
              "description": "Description for emptyContent",
              "value": {}
            },
            {
              "name": "filterTreeNode",
              "description": "Description for filterTreeNode",
              "value": {}
            },
            {
              "name": "treeData",
              "description": "Description for treeData",
              "value": {}
            },
            {
              "name": "keyMaps",
              "description": "Description for keyMaps",
              "value": {}
            },
            {
              "name": "onExpand",
              "description": "Description for onExpand",
              "value": {}
            },
            {
              "name": "renderFullLabel",
              "description": "Description for renderFullLabel",
              "value": {}
            },
            {
              "name": "renderLabel",
              "description": "Description for renderLabel",
              "value": {}
            },
            {
              "name": "showLine",
              "description": "Description for showLine",
              "value": {}
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Typography",
          "attributes": [
            {
              "name": "component_",
              "description": "Description for component_",
              "value": {
                "type": "any"
              }
            },
            {
              "name": "forwardRef",
              "description": "Description for forwardRef",
              "value": {
                "type": "(\"@vue/reactivity/dist/reactivity\").Ref<any>"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": []
        },
        {
          "name": "Upload",
          "attributes": [
            {
              "name": "accept",
              "description": "Description for accept",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "action",
              "description": "Description for action",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "afterUpload",
              "description": "Description for afterUpload",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/upload/foundation\").AfterUploadResult"
              }
            },
            {
              "name": "beforeUpload",
              "description": "Description for beforeUpload",
              "value": {
                "type": "(\"@douyinfe/semi-foundation/lib/es/upload/foundation\").BeforeUploadObjectResult>"
              }
            },
            {
              "name": "beforeClear",
              "description": "Description for beforeClear",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => boolean | Promise<boolean>"
              }
            },
            {
              "name": "beforeRemove",
              "description": "Description for beforeRemove",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => boolean | Promise<boolean>"
              }
            },
            {
              "name": "capture",
              "description": "Description for capture",
              "value": {
                "type": "boolean | \"user\" | \"environment\""
              }
            },
            {
              "name": "className",
              "description": "Description for className",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "customRequest",
              "description": "Description for customRequest",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").customRequestArgs) => void"
              }
            },
            {
              "name": "data",
              "description": "Description for data",
              "value": {
                "type": "Record<string, any> | ((file: File) => Record<string, unknown>)"
              }
            },
            {
              "name": "defaultFileList",
              "description": "Description for defaultFileList",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]"
              }
            },
            {
              "name": "directory",
              "description": "Description for directory",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Description for disabled",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "dragIcon",
              "description": "Description for dragIcon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "dragMainText",
              "description": "Description for dragMainText",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "dragSubText",
              "description": "Description for dragSubText",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "draggable",
              "description": "Description for draggable",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "addOnPasting",
              "description": "Description for addOnPasting",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "fileList",
              "description": "Description for fileList",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]"
              }
            },
            {
              "name": "fileName",
              "description": "Description for fileName",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "headers",
              "description": "Description for headers",
              "value": {
                "type": "Record<string, any> | ((file: File) => Record<string, string>)"
              }
            },
            {
              "name": "hotSpotLocation",
              "description": "Description for hotSpotLocation",
              "value": {
                "type": "\"start\" | \"end\""
              }
            },
            {
              "name": "itemStyle",
              "description": "Description for itemStyle",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "limit",
              "description": "Description for limit",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "listType",
              "description": "Description for listType",
              "value": {
                "type": "\"list\" | \"picture\""
              }
            },
            {
              "name": "maxSize",
              "description": "Description for maxSize",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "minSize",
              "description": "Description for minSize",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "multiple",
              "description": "Description for multiple",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Description for name",
              "value": {
                "type": "string"
              }
            },
            {
              "name": "onAcceptInvalid",
              "description": "Description for onAcceptInvalid",
              "value": {
                "type": "(files: File[]) => void"
              }
            },
            {
              "name": "onChange",
              "description": "Description for onChange",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").OnChangeProps) => void"
              }
            },
            {
              "name": "onClear",
              "description": "Description for onClear",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "onDrop",
              "description": "Description for onDrop",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => void"
              }
            },
            {
              "name": "onError",
              "description": "Description for onError",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[], xhr: XMLHttpRequest) => void"
              }
            },
            {
              "name": "onPastingError",
              "description": "Description for onPastingError",
              "value": {
                "type": "(error: Error | PermissionStatus) => void"
              }
            },
            {
              "name": "onExceed",
              "description": "Description for onExceed",
              "value": {
                "type": "(fileList: File[]) => void"
              }
            },
            {
              "name": "onFileChange",
              "description": "Description for onFileChange",
              "value": {
                "type": "(files: File[]) => void"
              }
            },
            {
              "name": "onOpenFileDialog",
              "description": "Description for onOpenFileDialog",
              "value": {
                "type": "() => void"
              }
            },
            {
              "name": "onPreviewClick",
              "description": "Description for onPreviewClick",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem) => void"
              }
            },
            {
              "name": "onProgress",
              "description": "Description for onProgress",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => void"
              }
            },
            {
              "name": "onRemove",
              "description": "Description for onRemove",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem) => void"
              }
            },
            {
              "name": "onRetry",
              "description": "Description for onRetry",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem) => void"
              }
            },
            {
              "name": "onSizeError",
              "description": "Description for onSizeError",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => void"
              }
            },
            {
              "name": "onSuccess",
              "description": "Description for onSuccess",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem[]) => void"
              }
            },
            {
              "name": "previewFile",
              "description": "Description for previewFile",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "prompt",
              "description": "Description for prompt",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "promptPosition",
              "description": "Description for promptPosition",
              "value": {
                "type": "\"left\" | \"right\" | \"bottom\""
              }
            },
            {
              "name": "picHeight",
              "description": "Description for picHeight",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "picWidth",
              "description": "Description for picWidth",
              "value": {
                "type": "string | number"
              }
            },
            {
              "name": "renderFileItem",
              "description": "Description for renderFileItem",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderPicInfo",
              "description": "Description for renderPicInfo",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderThumbnail",
              "description": "Description for renderThumbnail",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderPicPreviewIcon",
              "description": "Description for renderPicPreviewIcon",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "renderFileOperation",
              "description": "Description for renderFileOperation",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "showClear",
              "description": "Description for showClear",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showPicInfo",
              "description": "Description for showPicInfo",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showReplace",
              "description": "Description for showReplace",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showRetry",
              "description": "Description for showRetry",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "showUploadList",
              "description": "Description for showUploadList",
              "value": {
                "type": "boolean"
              }
            },
            {
              "name": "style",
              "description": "Description for style",
              "value": {
                "type": "(\"@vue/runtime-dom/dist/runtime-dom\").CSSProperties"
              }
            },
            {
              "name": "timeout",
              "description": "Description for timeout",
              "value": {
                "type": "number"
              }
            },
            {
              "name": "transformFile",
              "description": "Description for transformFile",
              "value": {
                "type": "(\"@kousum/semi-ui-vue/dist/upload/interface\").FileItem"
              }
            },
            {
              "name": "uploadTrigger",
              "description": "Description for uploadTrigger",
              "value": {
                "type": "\"custom\" | \"auto\""
              }
            },
            {
              "name": "validateMessage",
              "description": "Description for validateMessage",
              "value": {
                "type": "(\"@vue/runtime-core/dist/runtime-core\").RendererElement, { [key: string]: any; }>"
              }
            },
            {
              "name": "validateStatus",
              "description": "Description for validateStatus",
              "value": {
                "type": "\"default\" | \"error\" | \"warning\" | \"success\""
              }
            },
            {
              "name": "withCredentials",
              "description": "Description for withCredentials",
              "value": {
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": []
        }
      ]
    }
  }
}
